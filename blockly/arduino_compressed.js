// Do not edit this file; automatically generated by build.py.
'use strict';

/*
 Licensed under the Apache License, Version 2.0 (the "License"):
          http://www.apache.org/licenses/LICENSE-2.0
*/
Blockly.Arduino=new Blockly.Generator("Arduino");Blockly.Arduino.StaticTyping=new Blockly.StaticTyping;Blockly.Arduino.addReservedWords("Blockly,setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,integer,constants,floating,point,void,boolean,char,unsigned,byte,int,word,long,float,double,Byte,string,String,array,static,volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Arduino.ORDER_ATOMIC=0;Blockly.Arduino.ORDER_UNARY_POSTFIX=1;Blockly.Arduino.ORDER_UNARY_PREFIX=2;Blockly.Arduino.ORDER_MULTIPLICATIVE=3;Blockly.Arduino.ORDER_ADDITIVE=4;Blockly.Arduino.ORDER_SHIFT=5;Blockly.Arduino.ORDER_RELATIONAL=6;Blockly.Arduino.ORDER_EQUALITY=7;Blockly.Arduino.ORDER_BITWISE_AND=8;Blockly.Arduino.ORDER_BITWISE_XOR=9;Blockly.Arduino.ORDER_BITWISE_OR=10;Blockly.Arduino.ORDER_LOGICAL_AND=11;Blockly.Arduino.ORDER_LOGICAL_OR=12;Blockly.Arduino.ORDER_CONDITIONAL=13;
Blockly.Arduino.ORDER_ASSIGNMENT=14;Blockly.Arduino.ORDER_LOGICAL_NOT=15;Blockly.Arduino.ORDER_BITWISE_SHIFTLEFT=16;Blockly.Arduino.ORDER_BITWISE_SHIFTRIGHT=17;Blockly.Arduino.ORDER_NONE=99;Blockly.Arduino.PinTypes={INPUT:"INPUT",OUTPUT:"OUTPUT",PWM:"PWM",SERVO:"SERVO",STEPPER:"STEPPER",SENSOR:"SENSOR",SERIAL:"SERIAL",I2C:"I2C/TWI",SPI:"SPI"};Blockly.Arduino.DEF_FUNC_NAME=Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_;
Blockly.Arduino.init=function(a){Blockly.Arduino.includes_=Object.create(null);Blockly.Arduino.definitions_=Object.create(null);Blockly.Arduino.variables_=Object.create(null);Blockly.Arduino.codeFunctions_=Object.create(null);Blockly.Arduino.userFunctions_=Object.create(null);Blockly.Arduino.functionNames_=Object.create(null);Blockly.Arduino.setups_=Object.create(null);Blockly.Arduino.pins_=Object.create(null);Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=
new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);var b=Blockly.Arduino.StaticTyping.collectVarsWithTypes(a);Blockly.Arduino.StaticTyping.setProcedureArgs(a,b);for(var c in b)Blockly.Arduino.addVariable(c,Blockly.Arduino.getArduinoType_(b[c])+" "+Blockly.Arduino.variableDB_.getName(c,Blockly.Variables.NAME_TYPE)+";")};
Blockly.Arduino.finish=function(a){var b=[],c=[],d=[],e=[],f;for(f in Blockly.Arduino.includes_)b.push(Blockly.Arduino.includes_[f]);b.length&&b.push("\n");for(f in Blockly.Arduino.variables_)d.push(Blockly.Arduino.variables_[f]);d.length&&d.push("\n");for(f in Blockly.Arduino.definitions_)c.push(Blockly.Arduino.definitions_[f]);c.length&&c.push("\n");for(f in Blockly.Arduino.codeFunctions_)e.push(Blockly.Arduino.codeFunctions_[f]);for(f in Blockly.Arduino.userFunctions_)e.push(Blockly.Arduino.userFunctions_[f]);
e.length&&e.push("\n");var g=[""],h="";void 0!==Blockly.Arduino.setups_.userSetupCode&&(h="\n"+Blockly.Arduino.setups_.userSetupCode,delete Blockly.Arduino.setups_.userSetupCode);for(f in Blockly.Arduino.setups_)g.push(Blockly.Arduino.setups_[f]);h&&g.push(h);delete Blockly.Arduino.includes_;delete Blockly.Arduino.definitions_;delete Blockly.Arduino.codeFunctions_;delete Blockly.Arduino.userFunctions_;delete Blockly.Arduino.functionNames_;delete Blockly.Arduino.setups_;delete Blockly.Arduino.pins_;
Blockly.Arduino.variableDB_.reset();b=b.join("\n")+d.join("\n")+c.join("\n")+e.join("\n\n");g="void setup() {"+g.join("\n  ")+"\n}\n\n";a="void loop() {\n  "+a.replace(/\n/g,"\n  ")+"\n}";return b+g+a};Blockly.Arduino.addInclude=function(a,b){void 0===Blockly.Arduino.includes_[a]&&(Blockly.Arduino.includes_[a]=b)};Blockly.Arduino.addDeclaration=function(a,b){void 0===Blockly.Arduino.definitions_[a]&&(Blockly.Arduino.definitions_[a]=b)};
Blockly.Arduino.addVariable=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.variables_[a])Blockly.Arduino.variables_[a]=b,d=!0;return d};Blockly.Arduino.addSetup=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.setups_[a])Blockly.Arduino.setups_[a]=b,d=!0;return d};
Blockly.Arduino.addFunction=function(a,b){if(void 0===Blockly.Arduino.codeFunctions_[a]){var c=Blockly.Arduino.variableDB_.getDistinctName(a,Blockly.Generator.NAME_TYPE);Blockly.Arduino.codeFunctions_[a]=b.replace(Blockly.Arduino.DEF_FUNC_NAME,c);Blockly.Arduino.functionNames_[a]=c}return Blockly.Arduino.functionNames_[a]};
Blockly.Arduino.reservePin=function(a,b,c,d){void 0!==Blockly.Arduino.pins_[b]?Blockly.Arduino.pins_[b]!=c?a.setWarningText(Blockly.Msg.ARD_PIN_WARN1.replace("%1",b).replace("%2",d).replace("%3",c).replace("%4",Blockly.Arduino.pins_[b]),d):a.setWarningText(null,d):(Blockly.Arduino.pins_[b]=c,a.setWarningText(null,d))};Blockly.Arduino.scrubNakedValue=function(a){return a+";\n"};
Blockly.Arduino.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'");return'"'+a+'"'};
Blockly.Arduino.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=this.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=this.allNestedComments(d))&&(c+=this.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
Blockly.Arduino.getArduinoType_=function(a){switch(a.typeId){case Blockly.Types.SHORT_NUMBER.typeId:return"char";case Blockly.Types.NUMBER.typeId:return"int";case Blockly.Types.LARGE_NUMBER.typeId:return"long";case Blockly.Types.DECIMAL.typeId:return"float";case Blockly.Types.DOUBLE.typeId:return"double";case Blockly.Types.BYTE.typeId:return"byte";case Blockly.Types.TEXT.typeId:return"String";case Blockly.Types.CHARACTER.typeId:return"char";case Blockly.Types.BOOLEAN.typeId:return"boolean";case Blockly.Types.NULL.typeId:return"void";case Blockly.Types.UNDEF.typeId:return"undefined";case Blockly.Types.CHILD_BLOCK_MISSING.typeId:return"int";
default:return"Invalid Blockly Type"}};Blockly.Arduino.noGeneratorCodeInline=function(){return["",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.noGeneratorCodeLine=function(){return""};Blockly.Arduino.Boards={};Blockly.Arduino.Boards.generateDigitalIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push([d.toString(),d.toString()]);return c};Blockly.Arduino.Boards.generateAnalogIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push(["A"+d.toString(),"A"+d.toString()]);return c};
Blockly.Arduino.Boards.duplicateBoardProfile=function(a,b,c,d){return{name:b,description:c||a.description,compilerFlag:d||a.compilerFlag,analogPins:a.analogPins,digitalPins:a.digitalPins,pwmPins:a.pwmPins,serial:a.serial,serialPins:a.serialPins,serialSpeed:a.serialSpeed,spi:a.spi,spiPins:a.spiPins,spiClockDivide:a.spiClockDivide,i2c:a.i2c,i2cPins:a.i2cPins,i2cSpeed:a.i2cSpeed,builtinLed:a.builtinLed,interrupt:a.interrupt}};Blockly.Arduino.Boards.profiles={};
Blockly.Arduino.Boards.profiles.uno={name:"Arduino Uno",description:"Arduino Uno standard compatible board",compilerFlag:"arduino:avr:uno",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","0"],["TX","1"]]},serialSpeed:[["300","300"],["600","600"],["1200",
"1200"],["2400","2400"],["4800","4800"],["9600","9600"],["14400","14400"],["19200","19200"],["28800","28800"],["31250","31250"],["38400","38400"],["57600","57600"],["115200","115200"]],spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","11"],["MISO","12"],["SCK","13"]]},spiClockDivide:[["2 (8MHz)","SPI_CLOCK_DIV2"],["4 (4MHz)","SPI_CLOCK_DIV4"],["8 (2MHz)","SPI_CLOCK_DIV8"],["16 (1MHz)","SPI_CLOCK_DIV16"],["32 (500KHz)","SPI_CLOCK_DIV32"],["64 (250KHz)","SPI_CLOCK_DIV64"],["128 (125KHz)","SPI_CLOCK_DIV128"]],
i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","A4"],["SCL","A5"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:[["BUILTIN_1","13"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.nano_328={name:"Arduino Nano 328",description:"Arduino Nano with ATmega328 board",compilerFlag:"arduino:avr:nano:cpu=atmega328",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,7),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,7)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.nano_168=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.nano_328,"Arduino Nano 168","Arduino Nano with ATmega168 compatible board","arduino:avr:nano:cpu=atmega168");
Blockly.Arduino.Boards.profiles.duemilanove_168p={name:"Arduino Nano 168p",description:"Arduino Duemilanove with ATmega168p compatible board",compilerFlag:"arduino:avr:diecimila:cpu=atmega168",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins,pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.duemilanove_328p=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.duemilanove_168p,"Arduino Duemilanove 328p","Arduino Duemilanove with ATmega328p compatible board","arduino:avr:diecimila");
Blockly.Arduino.Boards.profiles.mega={name:"Arduino Mega",description:"Arduino Mega-compatible board",compilerFlag:"arduino:avr:mega",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,15),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,53),pwmPins:Blockly.Arduino.Boards.generateDigitalIo(2,13).concat(Blockly.Arduino.Boards.generateDigitalIo(44,46)),serial:[["serial","Serial"],["serial_1","Serial1"],["serial_2","Serial2"],["serial_3","Serial3"]],serialPins:{Serial:[["TX","0"],["RX","1"]],
Serial1:[["TX","18"],["TX","19"]],Serial2:[["TX","16"],["TX","17"]],Serial3:[["TX","14"],["TX","15"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","51"],["MISO","50"],["SCK","52"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","20"],["SCL","21"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0",
"2"],["interrupt1","3"],["interrupt2","21"],["interrupt3","20"],["interrupt4","19"],["interrupt5","18"]]};
Blockly.Arduino.Boards.profiles.leonardo={name:"Arduino Leonardo",description:"Arduino Leonardo-compatible board",compilerFlag:"arduino:avr:leonardo",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5).concat([["A6","4"],["A7","6"],["A8","8"],["A9","9"],["A10","10"],["A11","12"]]),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins.concat([["13","13"]]),serial:Blockly.Arduino.Boards.profiles.uno.serial,
serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","ICSP-4"],["MISO","ICSP-1"],["SCK","ICSP-3"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","2"],["SCL","3"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0","3"],["interrupt1","2"],["interrupt2",
"0"],["interrupt3","1"],["interrupt4","17"]]};Blockly.Arduino.Boards.profiles.yun=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.leonardo,"Arduino Yun","Arduino Yun compatible board");
Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini={name:"Atmel atmega328p Xplained mini",description:"Atmel Xplained mini board with atmega328p (Uno compatible)",compilerFlag:"atmel:avr:atmega328p_xplained_mini",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins.concat([["20","20"]]),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,
serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_LED","13"]],interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt,builtinButton:[["BUILTIN_BUTTON","20"]]};
Blockly.Arduino.Boards.profiles.atmel_atmega328pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega328pb Xplained mini","Atmel Xplained mini board with atmega328pb (Arduino Uno compatible)","atmel:avr:atmega328pb_xplained_mini");
Blockly.Arduino.Boards.profiles.atmel_atmega168pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega168pb Xplained mini","Atmel Xplained mini board with atmega168pb (Arduino Uno compatible)","atmel:avr:atmega168pb_xplained_mini");
Blockly.Arduino.Boards.profiles.esp8266_huzzah={name:"Adafruit Feather HUZZAH",description:"Adafruit HUZZAH ESP8266 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["0","0"],["2","2"],["4","4"],["5","5"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"]],pwmPins:[["2","2"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serial,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI",
"13"],["MISO","12"],["SCK","14"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","4"],["SCL","5"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","0"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.esp8266_wemos_d1={name:"Wemos D1",description:"Wemos D1 R2 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],pwmPins:[["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","D7"],["MISO","D6"],["SCK","D5"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","D2"],["SCL","D1"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","D4"]],interrupt:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]]};Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles.uno;
Blockly.Arduino.Boards.changeBoard=function(a,b){if(void 0===Blockly.Arduino.Boards.profiles[b])console.log("Tried to set non-existing Arduino board: "+b);else{Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles[b];for(var c=a.getAllBlocks(),d=0;d<c.length;d++){var e=c[d].updateFields;e&&e.call(c[d])}}};
Blockly.Arduino.Boards.refreshBlockFieldDropdown=function(a,b,c){var d=a.getField(b);b=d.getFieldValue();c=Blockly.Arduino.Boards.selected[c];d.menuGenerator_=c;for(var d=!1,e=0;e<c.length;e++)b==c[e][1]&&(d=!0);d?a.setWarningText(null,"bPin"):a.setWarningText("The old pin value "+b+" is no longer available.","bPin")};Blockly.Arduino.colour={};Blockly.Arduino.colour_picker=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_random=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_rgb=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_blend=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.IO={};Blockly.Arduino.io_digitalwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_digitalread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Digital Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["digitalRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_digitalread_pullup=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Digital Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT_PULLUP);",!1);return["digitalRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_builtin_led=function(a){var b=a.getFieldValue("BUILT_IN_LED"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Set LED");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);0>c||255<c?a.setWarningText("The analogue value set must be between 0 and 255","pwm_value"):a.setWarningText(null,"pwm_value");return"analogWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Analogue Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["analogRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.io_highlow=function(a){return[a.getFieldValue("STATE"),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_pulsein=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.io_pulsetimeout=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+", "+d+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.irrecv_setup=function(a){var b=a.getFieldValue("PIN"),c="irrecv_"+b;Blockly.Arduino.addInclude("irrecv_i", "#include <IRremote.h>");Blockly.Arduino.addDeclaration("irrecv_d1", "IRrecv "+c+"("+b+");\n");Blockly.Arduino.addDeclaration("irrecv_d2", "decode_results results;\nint btn;\n");Blockly.Arduino.addDeclaration("irrecv_d3", "void translateIR() {\n  switch(results.value)\n  {\n  case 0xFF6897: btn=0; break;\n  case 0xFF30CF: btn=1; break;\n  case 0xFF18E7: btn=2; break;\n  case 0xFF7A85: btn=3; break;\n  case 0xFF10EF: btn=4; break;\n  case 0xFF38C7: btn=5; break;\n  case 0xFF5AA5: btn=6; break;\n  case 0xFF42BD: btn=7; break;\n  case 0xFF4AB5: btn=8; break;\n  case 0xFF52AD: btn=9; break;\n  case 0xFFA25D: btn=10; break;\n  case 0xFF629D: btn=11; break;\n  case 0xFFE21D: btn=12; break;\n  case 0xFF22DD: btn=13; break;\n  case 0xFF02FD: btn=14; break;\n  case 0xFFC23D: btn=15; break;\n  case 0xFFE01F: btn=16; break;\n  case 0xFFA857: btn=17; break;\n  case 0xFF906F: btn=18; break;\n  case 0xFF9867: btn=19; break;\n  case 0xFFB04F: btn=20; break;\n  case 0xFFFFFFFF: btn=21; break;\n  default: btn=22;\n  }\n  delay(200);\n}\n");Blockly.Arduino.addSetup("irrecv_s", c+".enableIRIn();\n");return '';};Blockly.Arduino.irrecv_read=function(a){var b=a.getFieldValue("PIN"),c="irrecv_"+b; Blockly.Arduino.addDeclaration("irrecv_d4", "int btnVal() {\n    if ("+c+".decode(&results)) {\n      translateIR();\n      "+c+".resume();\n      return btn;\n    }\n}\n");return ['btnVal()']};Blockly.Arduino.rc522_setup=function(a){var b=a.getFieldValue("RST"),c=a.getFieldValue("SS");Blockly.Arduino.addInclude("rc522_i", "#include <SPI.h>\n#include <MFRC522.h>");Blockly.Arduino.addDeclaration("rc522_d", "#define RST_PIN "+b+"\n#define SS_PIN "+c+"\nMFRC522 mfrc522(SS_PIN, RST_PIN);");Blockly.Arduino.addSetup("rc522_s", "SPI.begin();\n  mfrc522.PCD_Init();\n  mfrc522.PCD_SetAntennaGain(mfrc522.RxGain_max);");return "";};Blockly.Arduino.rc522_getuid=function(a){var b=Blockly.Arduino.valueToCode(a, "VAR", Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable("rc522_v", "String "+b+";\n");return "if ( ! mfrc522.PICC_IsNewCardPresent())\n{\n  return;\n}\nif ( ! mfrc522.PICC_ReadCardSerial())\n{\n  return;\n}\nString content= \"\";\nbyte letter;\nfor (byte i = 0; i < mfrc522.uid.size; i++)\n{\n  content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? \" 0\" : \" \"));\n  content.concat(String(mfrc522.uid.uidByte[i], HEX));\n}\ncontent.toUpperCase();\n"+b+" = content.substring(1);\n";};Blockly.Arduino.rc522_adduid=function(a){var b=Blockly.Arduino.valueToCode(a, "VAR", Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a, "NUID", Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable("rc522_v2", "String "+b+";\n");return b+" = "+c+";\n";};Blockly.Arduino.lists={};Blockly.Arduino.lists_create_empty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_create_with=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_repeat=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_length=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_isEmpty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_indexOf=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_getIndex=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.lists_setIndex=Blockly.Arduino.noGeneratorCodeLine;Blockly.Arduino.logic={};Blockly.Arduino.controls_if=function(a){for(var b=0,c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e="if ("+c+") {\n"+d+"}",b=1;b<=a.elseifCount_;b++)c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e+=" else if ("+c+") {\n"+d+"}";a.elseCount_&&(d=Blockly.Arduino.statementToCode(a,"ELSE"),e+=" else {\n"+d+"}");return e+"\n"};
Blockly.Arduino.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c="=="==b||"!="==b?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,d=Blockly.Arduino.valueToCode(a,"A",c)||"0";a=Blockly.Arduino.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};Blockly.Arduino.logic_operation=function(a){var b={AND:"&&",OR:"||",NOT:"!"}[a.getFieldValue("OP")],c="&&"==b||"||"==b?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,d=Blockly.Arduino.valueToCode(a,"A",c)||"false";a=Blockly.Arduino.valueToCode(a,"B",c)||"false";if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};Blockly.Arduino.logic_negate=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(a,"BOOL",b)||"false"),b]};Blockly.Arduino.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.logic_null=function(a){return["NULL",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.logic_ternary=function(a){var b=Blockly.Arduino.valueToCode(a,"IF",Blockly.Arduino.ORDER_CONDITIONAL)||"false",c=Blockly.Arduino.valueToCode(a,"THEN",Blockly.Arduino.ORDER_CONDITIONAL)||"null";a=Blockly.Arduino.valueToCode(a,"ELSE",Blockly.Arduino.ORDER_CONDITIONAL)||"null";return[b+" ? "+c+" : "+a,Blockly.Arduino.ORDER_CONDITIONAL]};Blockly.Arduino.loops={};Blockly.Arduino.controls_repeat=function(a){var b=Number(a.getFieldValue("TIMES")),c=Blockly.Arduino.statementToCode(a,"DO"),c=Blockly.Arduino.addLoopTrap(c,a.id);a=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);return"for (int "+a+" = 0; "+a+" < "+b+"; "+a+"++) {\n"+c+"}\n"};
Blockly.Arduino.controls_repeat_ext=function(a){var b=Blockly.Arduino.valueToCode(a,"TIMES",Blockly.Arduino.ORDER_ADDITIVE)||"0",c=Blockly.Arduino.statementToCode(a,"DO"),c=Blockly.Arduino.addLoopTrap(c,a.id);a="";var d=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),e=b;b.match(/^\w+$/)||Blockly.isNumber(b)||(e=Blockly.Arduino.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE),a+="int "+e+" = "+b+";\n");return a+("for (int "+d+" = 0; "+d+" < "+
e+"; "+d+"++) {\n"+c+"}\n")};Blockly.Arduino.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Arduino.valueToCode(a,"BOOL",b?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"),d=Blockly.Arduino.addLoopTrap(d,a.id);b&&(c.match(/^\w+$/)||(c="("+c+")"),c="!"+c);return"while ("+c+") {\n"+d+"}\n"};
Blockly.Arduino.controls_for=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",d=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",e=Blockly.Arduino.valueToCode(a,"BY",Blockly.Arduino.ORDER_ASSIGNMENT)||"1",f=Blockly.Arduino.statementToCode(a,"DO"),f=Blockly.Arduino.addLoopTrap(f,a.id);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var g=
parseFloat(c)<=parseFloat(d);a="for ("+b+" = "+c+"; "+b+(g?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseFloat(e));a=(1==b?a+(g?"++":"--"):a+((g?" += ":" -= ")+b))+(") {\n"+f+"}\n")}else a="",g=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.Arduino.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),a+="int "+g+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.Arduino.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),a+="int "+c+" = "+d+";\n"),d=Blockly.Arduino.variableDB_.getDistinctName(b+
"_inc",Blockly.Variables.NAME_TYPE),a+="int "+d+" = ",a=Blockly.isNumber(e)?a+(Math.abs(e)+";\n"):a+("abs("+e+");\n"),a=a+("if ("+g+" > "+c+") {\n")+(Blockly.Arduino.INDENT+d+" = -"+d+";\n"),a+="}\n",a+="for ("+b+" = "+g+";\n     "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+";\n     "+b+" += "+d+") {\n"+f+"}\n";return a};Blockly.Arduino.controls_forEach=Blockly.Arduino.noGeneratorCodeLine;
Blockly.Arduino.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};Blockly.Arduino.map={};Blockly.Arduino.base_map=function(a){var b=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||"0",c=Blockly.Arduino.valueToCode(a,"FROML",Blockly.Arduino.ORDER_NONE)||"0",d=Blockly.Arduino.valueToCode(a,"FROMH",Blockly.Arduino.ORDER_NONE)||"100",e=Blockly.Arduino.valueToCode(a,"TOL",Blockly.Arduino.ORDER_NONE)||"0",f=Blockly.Arduino.valueToCode(a,"TOH",Blockly.Arduino.ORDER_NONE)||"1000";return["map("+b+", "+c+", "+d+", "+e+", "+f+")",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.math={};Blockly.Arduino.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));Infinity==a?a="INFINITY":-Infinity==a&&(a="-INFINITY");return[a,Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]}[a.getFieldValue("OP")],c=b[0],b=b[1],d=Blockly.Arduino.valueToCode(a,"A",b)||"0";a=Blockly.Arduino.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:["Math.pow("+d+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_single=function(a){var b=a.getFieldValue("OP"),c;if("NEG"==b)return a=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"0","-"==a[0]&&(a=" "+a),["-"+a,Blockly.Arduino.ORDER_UNARY_PREFIX];a="ABS"==b||"ROUND"==b.substring(0,5)?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0":"SIN"==b||"COS"==b||"TAN"==b?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0":Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||
"0";switch(b){case "ABS":c="abs("+a+")";break;case "ROOT":c="sqrt("+a+")";break;case "LN":c="log("+a+")";break;case "EXP":c="exp("+a+")";break;case "POW10":c="pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="ceil("+a+")";break;case "ROUNDDOWN":c="floor("+a+")";break;case "SIN":c="sin("+a+" / 180 * Math.PI)";break;case "COS":c="cos("+a+" / 180 * Math.PI)";break;case "TAN":c="tan("+a+" / 180 * Math.PI)"}if(c)return[c,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(b){case "LOG10":c=
"log("+a+") / log(10)";break;case "ASIN":c="asin("+a+") / M_PI * 180";break;case "ACOS":c="acos("+a+") / M_PI * 180";break;case "ATAN":c="atan("+a+") / M_PI * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constant=function(a){return{PI:["M_PI",Blockly.Arduino.ORDER_UNARY_POSTFIX],E:["M_E",Blockly.Arduino.ORDER_UNARY_POSTFIX],GOLDEN_RATIO:["(1 + sqrt(5)) / 2",Blockly.Arduino.ORDER_MULTIPLICATIVE],SQRT2:["M_SQRT2",Blockly.Arduino.ORDER_UNARY_POSTFIX],SQRT1_2:["M_SQRT1_2",Blockly.Arduino.ORDER_UNARY_POSTFIX],INFINITY:["INFINITY",Blockly.Arduino.ORDER_ATOMIC]}[a.getFieldValue("CONSTANT")]};
Blockly.Arduino.math_number_property=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY"),d;if("PRIME"==c)return a=Blockly.Arduino.addFunction("mathIsPrime",["boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(int n) {","  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  if (n == 2 || n == 3) {\n    return true;\n  }\n  // False if n is NaN, negative, is 1.\n  // And false if n is divisible by 2 or 3.\n  if (isnan(n) || (n <= 1) || (n == 1) || (n % 2 == 0) || (n % 3 == 0)) {\n    return false;\n  }\n  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for (int x = 6; x <= sqrt(n) + 1; x += 6) {\n    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\n      return false;\n    }\n  }\n  return true;\n}"].join("\n")),
Blockly.Arduino.addInclude("math","#include <math.h>"),[a+"("+b+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(c){case "EVEN":d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":Blockly.Arduino.addInclude("math","#include <math.h>");d="(floor("+b+") == "+b+")";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",d=b+" % "+a+" == 0"}return[d,Blockly.Arduino.ORDER_EQUALITY]};
Blockly.Arduino.math_change=function(a){var b=Blockly.Arduino.valueToCode(a,"DELTA",Blockly.Arduino.ORDER_ADDITIVE)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" += "+b+";\n"};Blockly.Arduino.math_round=Blockly.Arduino.math_single;Blockly.Arduino.math_trig=Blockly.Arduino.math_single;Blockly.Arduino.math_on_list=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.math_modulo=function(a){var b=Blockly.Arduino.valueToCode(a,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constrain=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"0",c=Blockly.Arduino.valueToCode(a,"LOW",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"HIGH",Blockly.Arduino.ORDER_NONE)||"0";return["("+b+" < "+c+" ? "+c+" : ( "+b+" > "+a+" ? "+a+" : "+b+"))",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_random_int=function(a){var b=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_NONE)||"0";var c=Blockly.Arduino.variableDB_.getDistinctName("math_random_int",Blockly.Generator.NAME_TYPE);Blockly.Arduino.math_random_int.random_function=c;return[Blockly.Arduino.addFunction("mathRandomInt",["int "+Blockly.Arduino.DEF_FUNC_NAME+"(int min, int max) {","  if (min > max) {\n    // Swap min and max to ensure min is smaller.\n    int temp = min;\n    min = max;\n    max = temp;\n  }\n  return min + (rand() % (max - min + 1));\n}"].join("\n"))+
"("+b+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.math_random_float=function(a){return["(rand() / RAND_MAX)",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.procedures={};
Blockly.Arduino.procedures_defreturn=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=Blockly.Arduino.statementToCode(a,"STACK");Blockly.Arduino.STATEMENT_PREFIX&&(c=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,"'"+a.id+"'"),Blockly.Arduino.INDENT)+c);Blockly.Arduino.INFINITE_LOOP_TRAP&&(c=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+a.id+"'")+c);var d=Blockly.Arduino.valueToCode(a,"RETURN",Blockly.Arduino.ORDER_NONE)||
"";d&&(d="  return "+d+";\n");for(var e=[],f=0;f<a.arguments_.length;f++)e[f]=Blockly.Arduino.getArduinoType_(a.getArgType(a.arguments_[f]))+" "+Blockly.Arduino.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);f=Blockly.Types.NULL;a.getReturnType&&(f=a.getReturnType());f=Blockly.Arduino.getArduinoType_(f);c=f+" "+b+"("+e.join(", ")+") {\n"+c+d+"}";c=Blockly.Arduino.scrub_(a,c);Blockly.Arduino.userFunctions_[b]=c;return null};Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn;
Blockly.Arduino.procedures_callreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return[b+"("+c.join(", ")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.procedures_callnoreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return b+"("+c.join(", ")+");\n"};
Blockly.Arduino.procedures_ifreturn=function(a){var b="if ("+(Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false")+") {\n";a.hasReturnValue_?(a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"null",b+="  return "+a+";\n"):b+="  return;\n";return b+"}\n"};
Blockly.Arduino.arduino_functions=function(a){var b=Blockly.Arduino.statementToCode(a,"SETUP_FUNC");b&&Blockly.Arduino.addSetup("userSetupCode",b,!0);a=a.getInputTargetBlock("LOOP_FUNC");b=Blockly.Arduino.blockToCode(a);if(!goog.isString(b))throw'Expecting code from statement block "'+a.type+'".';return b};Blockly.Arduino.serial={};Blockly.Arduino.serial_print=function(a){for(var b=a.getFieldValue("SERIAL_ID"),c=Blockly.Arduino.valueToCode(a,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"0",d="TRUE"==a.getFieldValue("NEW_LINE"),e=Blockly.Arduino.Boards.selected.serialPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SERIAL,"SERIAL "+e[f][0]);return d?b+".println("+c+");\n":b+".print("+c+");\n"};
Blockly.Arduino.serial_setup=function(a){var b=a.getFieldValue("SERIAL_ID");a=a.getFieldValue("SPEED");Blockly.Arduino.addSetup("serial_"+b,b+".begin("+a+");",!0);return " "};Blockly.Arduino.servo={};Blockly.Arduino.servo_write=function(a){var b=a.getFieldValue("SERVO_PIN"),c=Blockly.Arduino.valueToCode(a,"SERVO_ANGLE",Blockly.Arduino.ORDER_ATOMIC)||"90",d="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Write");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+d+";");Blockly.Arduino.addSetup("servo_"+b,d+".attach("+b+");",!0);return d+".write("+c+");\n"};
Blockly.Arduino.servo_read=function(a){var b=a.getFieldValue("SERVO_PIN"),c="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Read");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+c+";");Blockly.Arduino.addSetup("servo_"+b,c+".attach("+b+");",!0);return[c+".read()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.spi={};
Blockly.Arduino.spi_setup=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SHIFT_ORDER"),d=a.getFieldValue("SPI_CLOCK_DIVIDE");a=a.getFieldValue("SPI_MODE");Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_order",b+".setBitOrder("+c+");",!0);Blockly.Arduino.addSetup("spi_mode",b+".setDataMode("+a+");",!0);Blockly.Arduino.addSetup("spi_div",b+".setClockDivider("+d+");",!0);Blockly.Arduino.addSetup("spi_begin",b+".begin();",!0);return""};
Blockly.Arduino.spi_transfer=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_begin",b+".begin();",!1);for(var e=Blockly.Arduino.Boards.selected.spiPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SPI,"SPI "+e[f][0]);"none"!==c&&(Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,
"SPI Slave pin"),Blockly.Arduino.addSetup("io_"+c,"pinMode("+c+", OUTPUT);",!1));a=[];"none"!==c&&a.push("digitalWrite("+c+", HIGH);");a.push(b+".transfer("+d+");");"none"!==c&&a.push("digitalWrite("+c+", LOW);");return a.join("\n")+"\n"};Blockly.Arduino.mkpad_setup=function(a){var b=a.getFieldValue("ROW1"),c=a.getFieldValue("ROW2"),d=a.getFieldValue("ROW3"),e=a.getFieldValue("ROW4"),w=a.getFieldValue("COL1"),x=a.getFieldValue("COL2"),y=a.getFieldValue("COL3"),z=a.getFieldValue("COL4"),f="mkpad_"+b;Blockly.Arduino.addInclude("mkpad","#include <Keypad.h>");Blockly.Arduino.addDeclaration('mkpad_', 'const byte ROWS = 4;\nconst byte COLS = 4;\nchar hexaKeys[ROWS][COLS] = {{\'1\',\'2\',\'3\',\'A\'},{\'4\',\'5\',\'6\',\'B\'},{\'7\',\'8\',\'9\',\'C\'},{\'*\',\'0\',\'#\',\'D\'};return "";};\nbyte rowPins[ROWS] = {'+e+', ' + d + ', ' + c + ', ' + b + '};\nbyte colPins[COLS] = {' +z+ ', ' +y+ ', ' +x+ ', ' +w+ '};\n'+'Keypad '+f+' = Keypad(makeKeymap(hexaKeys),rowPins,colPins,ROWS,COLS);\n');return "";};Blockly.Arduino.mkpad_getkey=function(a){var b=a.getFieldValue("ROW1"),c="mkpad_"+b;return[c+".getKey()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.dht11_setup=function(a){var b=a.getFieldValue("PIN"),c="dht11_"+b;Blockly.Arduino.addInclude("dht11_i","#include <DHT.h>");Blockly.Arduino.addDeclaration("dht11_d","#define DHTPIN "+b+"\n#define DHTTYPE DHT11\n"+"DHT "+c+"(DHTPIN,DHTTYPE);\n");Blockly.Arduino.addSetup("dht11_s",c+".begin();\n");};Blockly.Arduino.spi_transfer_return=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.spi_transfer(a);return["none"===c?b+".transfer("+d+")":Blockly.Arduino.addFunction("spiReturnSlave"+c,["int "+Blockly.Arduino.DEF_FUNC_NAME+"() {","  int spiReturn = 0;","  digitalWrite("+c+", HIGH);","  spiReturn = "+b+".transfer("+d+");","  digitalWrite("+c+", LOW);","  return spiReturn;\n}"].join("\n"))+
"()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.stepper={};Blockly.Arduino.stepper_config=function(a){var b=Blockly.Arduino.PinTypes.STEPPER,c=a.getFieldValue("STEPPER_NAME"),d=a.getFieldValue("STEPPER_NUMBER_OF_PINS"),e=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"360",f=Blockly.Arduino.valueToCode(a,"STEPPER_SPEED",Blockly.Arduino.ORDER_ATOMIC)||"90",g=[a.getFieldValue("STEPPER_PIN1"),a.getFieldValue("STEPPER_PIN2")];"FOUR"===d&&(g.push(a.getFieldValue("STEPPER_PIN3")),g.push(a.getFieldValue("STEPPER_PIN4")));for(var d="int "+c+"["+g.length+"] = {",e="Stepper stepper_"+c+"("+e+", ",h=0;h<g.length;h++)Blockly.Arduino.reservePin(a,g[h],b,"Stepper"),d+=g[h]+", ",e+=g[h]+", ";d=d.slice(0,-2)+"};";e=e.slice(0,-2)+");";Blockly.Arduino.addVariable(c,d,!0);c="stepper_"+c;Blockly.Arduino.addInclude("stepper","#include <Stepper.h>");Blockly.Arduino.addDeclaration(c,e);Blockly.Arduino.addSetup(c,c+".setSpeed("+f+");",!0);return""};
Blockly.Arduino.stepper_step=function(a){var b="stepper_"+a.getFieldValue("STEPPER_NAME");a=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"0";return b+".step("+a+");\n"};Blockly.Arduino.text={};Blockly.Arduino.text=function(a){return[Blockly.Arduino.quote_(a.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_join=function(a){var b;if(0==a.itemCount_)return['""',Blockly.Arduino.ORDER_ATOMIC];if(1==a.itemCount_)return["String("+(Blockly.Arduino.valueToCode(a,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];var c;b=[];for(var d=0;d<a.itemCount_;d++)c=Blockly.Arduino.valueToCode(a,"ADD"+d,Blockly.Arduino.ORDER_NONE),b[d]=""==c?'""':"String("+c+")";b=b.join(" + ");return[b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_append=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return b+" += "+(""==a?'""':"String("+a+")")+";\n"};Blockly.Arduino.text_length=function(a){return["String("+(Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+").length()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_isEmpty=function(a){var b=[];b.push("boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");b.push("  if (msg.length() == 0) {");b.push("    return true;");b.push("  } else {");b.push("    return false;");b.push("  }");b.push("}");b=Blockly.Arduino.addFunction("isStringEmpty",b.join("\n"));a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[b+"("+(""==a?'""':"String("+a+")")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_trim=function(a){Blockly.Arduino.text_trim.OPERATORS={LEFT:".trim()",RIGHT:".trim()",BOTH:".trim()"};var b=a.getFieldValue("MODE"),b=Blockly.Arduino.text_trim.OPERATORS[b];a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[(""==a?'""':"String("+a+")")+b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_print=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1];Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE);return b+".print("+(""==a?'""':"String("+a+")")+");\n"};
Blockly.Arduino.text_prompt_ext=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1],c=a.getFieldValue("TYPE"),d=[],e=c==Blockly.Types.NUMBER.output;e?d.push("int "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {"):d.push("String "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");d.push("  "+b+".println(msg);");d.push("  boolean stringComplete = false;");e?d.push("  int content = 0;"):d.push('  String content = "";');d.push("  while (stringComplete == false) {");d.push("    if ("+b+".available()) {");
e?(d.push("      content = "+b+".parseInt();"),d.push("      stringComplete = true;")):(d.push("      char readChar = (char)"+b+".read();"),d.push("      if (readChar == '\\n' || readChar == '\\r') {"),d.push("        stringComplete = true;"),d.push("      } else {"),d.push("        content += readChar;"),d.push("      }"));d.push("    }");d.push("  }");d.push("  // Empty incoming serial buffer");d.push("  while(Serial.available()) { Serial.read(); };");d.push("  return content;");d.push("}");c=Blockly.Arduino.addFunction("getUserInputPrompt"+
c,d.join("\n"));Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE)||'""';return[c+"("+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_endString=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_indexOf=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_charAt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_getSubstring=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_changeCase=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_prompt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.time={};Blockly.Arduino.time_delay=function(a){return"delay("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MILI",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_delaymicros=function(a){return"delayMicroseconds("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MICRO",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_millis=function(a){return["millis()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.time_micros=function(a){return["micros()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.infinite_loop=function(a){return"while(true);\n"};
Blockly.Arduino.ds3231_setup=function(a){Blockly.Arduino.addInclude("rtc","#include <Wire.h>\n#include <RTClib.h>");Blockly.Arduino.addDeclaration("rtc_d","RTC_DS3231 rtc;");Blockly.Arduino.addVariable("rtc_v", "int vYear;\nint vMonth;\nint vDay;\nint vHours;\nint vMinutes;\nint vSecs;");Blockly.Arduino.addSetup("rtc_s", "rtc.begin();");return "";};Blockly.Arduino.ds3231_setclock=function(a){var b="TRUE"===a.getFieldValue("SETCLOCK")?true:false,c=a.getFieldValue("SETYEAR"),d=a.getFieldValue("SETMONTH"),e=a.getFieldValue("SETDAY"),f=a.getFieldValue("SETHOUR"),g=a.getFieldValue("SETMINUTE");Blockly.Arduino.addSetup("rtc_set", "bool setclock = "+b+";\n  if(setclock == true) {\n    rtc.adjust(DateTime("+c+", "+d+", "+e+", "+f+", "+g+", 0));\n  }");return '';};Blockly.Arduino.ds3231_read=function(a){var b=Blockly.Arduino.valueToCode(a,"YEAR",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"MONTH",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"DAY",Blockly.Arduino.ORDER_ATOMIC),e=Blockly.Arduino.valueToCode(a, "HOUR",Blockly.Arduino.ORDER_ATOMIC),f=Blockly.Arduino.valueToCode(a, "MINUTE",Blockly.Arduino.ORDER_ATOMIC),g=Blockly.Arduino.valueToCode(a,"SECOND",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable("rtc_var", "int "+b+";\nint "+c+";\nint "+d+";\nint "+e+";\nint "+f+";\nint "+g+";\n");return "DateTime now = rtc.now();\nvYear = now.year();\nvMonth = now.month();\nvDay = now.day();\nvHours = now.hour();\nvMinutes = now.minute();\nvSecs = now.second();\n"+b+" = vYear;\n"+c+" = vMonth;\n"+d+" = vDay;\n"+e+" = vHours;\n"+f+" = vMinutes;\n"+g+" = vSecs;\ndelay(1000);\n"};
Blockly.Arduino.tone={};Blockly.Arduino.io_tone=function(a){var b=a.getFieldValue("TONEPIN"),c=Blockly.Arduino.valueToCode(a,"FREQUENCY",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"tone("+b+","+c+");\n"};
Blockly.Arduino.io_notone=function(a){var b=a.getFieldValue("TONEPIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"noTone("+b+");\n"};Blockly.Arduino.variables={};Blockly.Arduino.variables_get=function(a){return[Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.variables_set=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+";\n"};
Blockly.Arduino.variables_set_type=function(a){var b=Blockly.Arduino.valueToCode(a,"VARIABLE_SETTYPE_INPUT",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return["("+Blockly.Arduino.getArduinoType_(Blockly.Types[a.getFieldValue("VARIABLE_SETTYPE_TYPE")])+")("+b+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.sensors={};Blockly.Arduino.sr04_setup=function(a){var b=a.getFieldValue("ECHO_PIN"),c=a.getFieldValue("TRIG_PIN"),d="sr04_"+b;Blockly.Arduino.addInclude("sr04","#include <SR04.h>");Blockly.Arduino.addDeclaration("sr04_", "SR04 "+d+"("+b+", "+c+");");return"";};
Blockly.Arduino.sr04_read=function(a){var b=a.getFieldValue("ECHO_PIN"),c="sr04_"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SENSOR,"HC-SR04 Read");return[c+".Distance()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.dht11_setup=function(a){var b=a.getFieldValue("PIN"),c="dht11_"+b;Blockly.Arduino.addInclude("dht11_i","#include <DHT.h>");Blockly.Arduino.addDeclaration("dht11_d","#define DHTPIN "+b+"\n#define DHTTYPE DHT11\n"+"DHT "+c+"(DHTPIN,DHTTYPE);\n");Blockly.Arduino.addSetup("dht11_s",c+".begin();\n");return "";};Blockly.Arduino.dht11_readt=function(a){var b=a.getFieldValue("PIN"),c="dht11_"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypesc.SENSOR,"DHT11 Read");return[c+".readTemperature()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.dht11_readh=function(a){var b=a.getFieldValue("PIN"),c="dht11_"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SENSOR,"DHT11 Read");return[c+".readHumidity()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.gy521_setup=function(a){Blockly.Arduino.addInclude("gy521_i","#include <Wire.h>\n#include<MPU6050_light.h>");Blockly.Arduino.addDeclaration("gy521_d","MPU6050 mpu(Wire);\nfloat rx, ry, rz, t;\n");Blockly.Arduino.addSetup("gy521_s","Wire.begin();\n  byte status = mpu.begin();\n  mpu.calcOffsets();\n");return ""};Blockly.Arduino.gy521_rot=function(a){var b=Blockly.Arduino.valueToCode(a,"ROTX",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"ROTY",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"ROTZ",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable('rot_d', 'float '+b+';\nfloat '+c+';\nfloat '+d+';\n');return "mpu.update();\nrx = mpu.getAngleX();\nry = mpu.getAngleY();\nrz = mpu.getAngleZ();\ndelay(10);\n"+b+" = rx;\n"+c+" = ry;\n"+d+" = rz;\n"};Blockly.Arduino.gy521_t=function(a){var b=Blockly.Arduino.valueToCode(a,"T",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addVariable("t_d", "float "+b+";\n");return "mpu.update();\nt = mpu.getTemp();\ndelay(10);\n"+b+" = t;\n"};Blockly.Arduino.displays={};Blockly.Arduino.max7219_setup=function(a){var b=a.getFieldValue("DIN"),c=a.getFieldValue("CS"),d=a.getFieldValue("CLK"),e="max7219_"+b;Blockly.Arduino.addInclude("max7219","#include <LedControl.h>");Blockly.Arduino.addDeclaration("max7219_", "LedControl "+e+"=LedControl("+b+","+d+","+c+",1);");Blockly.Arduino.addSetup("max7219_sd", e+".shutdown(0,false);");Blockly.Arduino.addSetup("max7219_br", e+".setIntensity(0,8);");Blockly.Arduino.addSetup("max7219_clr", e+".clearDisplay(0);");return "";};Blockly.Arduino.max7219_clr=function(a){var b=a.getFieldValue("DIN"),c="max7219_"+b;return c+".clearDisplay(0);\n"};
Blockly.Arduino.max7219_setchar=function(a){var b=a.getFieldValue("DIN"),c="max7219_"+b,d=a.getFieldValue("VAR"),e=["TRUE"===a.getFieldValue("11")?1:0,"TRUE"===a.getFieldValue("12")?1:0,"TRUE"===a.getFieldValue("13")?1:0,"TRUE"===a.getFieldValue("14")?1:0,"TRUE"===a.getFieldValue("15")?1:0,"TRUE"===a.getFieldValue("16")?1:0,"TRUE"===a.getFieldValue("17")?1:0,"TRUE"===a.getFieldValue("18")?1:0],f=["TRUE"===a.getFieldValue("21")?1:0,"TRUE"===a.getFieldValue("22")?1:0,"TRUE"===a.getFieldValue("23")?1:0,"TRUE"===a.getFieldValue("24")?1:0,"TRUE"===a.getFieldValue("25")?1:0,"TRUE"===a.getFieldValue("26")?1:0,"TRUE"===a.getFieldValue("27")?1:0,"TRUE"===a.getFieldValue("28")?1:0],g=["TRUE"===a.getFieldValue("31")?1:0,"TRUE"===a.getFieldValue("32")?1:0,"TRUE"===a.getFieldValue("33")?1:0,"TRUE"===a.getFieldValue("34")?1:0,"TRUE"===a.getFieldValue("35")?1:0,"TRUE"===a.getFieldValue("36")?1:0,"TRUE"===a.getFieldValue("37")?1:0,"TRUE"===a.getFieldValue("38")?1:0],h=["TRUE"===a.getFieldValue("41")?1:0,"TRUE"===a.getFieldValue("42")?1:0,"TRUE"===a.getFieldValue("43")?1:0,"TRUE"===a.getFieldValue("44")?1:0,"TRUE"===a.getFieldValue("45")?1:0,"TRUE"===a.getFieldValue("46")?1:0,"TRUE"===a.getFieldValue("47")?1:0,"TRUE"===a.getFieldValue("48")?1:0],i=["TRUE"===a.getFieldValue("51")?1:0,"TRUE"===a.getFieldValue("52")?1:0,"TRUE"===a.getFieldValue("53")?1:0,"TRUE"===a.getFieldValue("54")?1:0,"TRUE"===a.getFieldValue("55")?1:0,"TRUE"===a.getFieldValue("56")?1:0,"TRUE"===a.getFieldValue("57")?1:0,"TRUE"===a.getFieldValue("58")?1:0],j=["TRUE"===a.getFieldValue("61")?1:0,"TRUE"===a.getFieldValue("62")?1:0,"TRUE"===a.getFieldValue("63")?1:0,"TRUE"===a.getFieldValue("64")?1:0,"TRUE"===a.getFieldValue("65")?1:0,"TRUE"===a.getFieldValue("66")?1:0,"TRUE"===a.getFieldValue("67")?1:0,"TRUE"===a.getFieldValue("68")?1:0],k=["TRUE"===a.getFieldValue("71")?1:0,"TRUE"===a.getFieldValue("72")?1:0,"TRUE"===a.getFieldValue("73")?1:0,"TRUE"===a.getFieldValue("74")?1:0,"TRUE"===a.getFieldValue("75")?1:0,"TRUE"===a.getFieldValue("76")?1:0,"TRUE"===a.getFieldValue("77")?1:0,"TRUE"===a.getFieldValue("78")?1:0],l=["TRUE"===a.getFieldValue("81")?1:0,"TRUE"===a.getFieldValue("82")?1:0,"TRUE"===a.getFieldValue("83")?1:0,"TRUE"===a.getFieldValue("84")?1:0,"TRUE"===a.getFieldValue("85")?1:0,"TRUE"===a.getFieldValue("86")?1:0,"TRUE"===a.getFieldValue("87")?1:0,"TRUE"===a.getFieldValue("88")?1:0];Blockly.Arduino.addVariable(d,"byte "+d+"[8]={B"+e[0]+e[1]+e[2]+e[3]+e[4]+e[5]+e[6]+e[7]+",B"+f[0]+f[1]+f[2]+f[3]+f[4]+f[5]+f[6]+f[7]+",B"+g[0]+g[1]+g[2]+g[3]+g[4]+g[5]+g[6]+g[7]+",B"+h[0]+h[1]+h[2]+h[3]+h[4]+h[5]+h[6]+h[7]+",B"+i[0]+i[1]+i[2]+i[3]+i[4]+i[5]+i[6]+i[7]+",B"+j[0]+j[1]+j[2]+j[3]+j[4]+j[5]+j[6]+j[7]+",B"+k[0]+k[1]+k[2]+k[3]+k[4]+k[5]+k[6]+k[7]+",B"+l[0]+l[1]+l[2]+l[3]+l[4]+l[5]+l[6]+l[7]+"};\n",true);return c+".setRow(0,0,"+d+"[0]);\n" + c+".setRow(0,1,"+d+"[1]);\n" + c+".setRow(0,2,"+d+"[2]);\n" + c+".setRow(0,3,"+d+"[3]);\n" + c+".setRow(0,4,"+d+"[4]);\n" + c+".setRow(0,5,"+d+"[5]);\n" + c+".setRow(0,6,"+d+"[6]);\n" + c+".setRow(0,7,"+d+"[7]);\n"};
Blockly.Arduino.lcd1602_setup=function(a){var b=a.getFieldValue("DB4"),c=a.getFieldValue("DB5"),d=a.getFieldValue("DB6"),e=a.getFieldValue("DB7");Blockly.Arduino.addInclude("lcd","#include <LiquidCrystal.h>");Blockly.Arduino.addDeclaration("lcd_d", "LiquidCrystal lcd(7, 8, "+b+", "+c+", "+d+", "+e+");");Blockly.Arduino.addSetup("lcd_s", "lcd.begin(16, 2);");return '';};Blockly.Arduino.lcd1602_write=function(a){var b=Blockly.Arduino.valueToCode(a,"LINE1",Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a,"LINE2",Blockly.Arduino.ORDER_ATOMIC);return "lcd.setCursor(0, 0);\nlcd.print("+b+");\nlcd.setCursor(0,1);\nlcd.print("+c+");\n"};Blockly.Arduino.lcd1602_clr=function(a){return "lcd.clear();\n"};Blockly.Arduino.sevseg=function(a){Blockly.Arduino.addDeclaration('sevenseg', 'byte seven_seg_digits[10] = {B11111100,B01100000,B11011010,B11110010,B01100110,B10110110,B10111110,B11100000,B11111110,B11100110};');return ""};Blockly.Arduino.sevseg_write=function(a){var b=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX);return ["seven_seg_digits["+b+"]", Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.foursevseg_setup=function(a){var b=a.getFieldValue("SEGA"),c=a.getFieldValue("SEGB"),d=a.getFieldValue("SEGC"),e=a.getFieldValue("SEGD"),f=a.getFieldValue("SEGE"),g=a.getFieldValue("SEGF"),h=a.getFieldValue("SEGG"),i=a.getFieldValue("SEGDP"),j=a.getFieldValue("DIG1"),k=a.getFieldValue("DIG2"),l=a.getFieldValue("DIG3"),m=a.getFieldValue("DIG4"); Blockly.Arduino.addDeclaration("fss_d", "int segA =  "+b+";\nint segB = "+c+";\nint segC = "+d+";\nint segD = "+e+";\nint segE = "+f+";\nint segF = "+g+";\nint segG = "+h+";\nint segDP = "+i+";\nint digit1 = "+j+";\nint digit2 = "+k+";\nint digit3 = "+l+";\nint digit4 = "+m+";\nint figur = 0;\nboolean tens = false;\nboolean hundred = false;\n\nvoid numSegs(int numbers) {\n  switch (numbers) {\n    case 0:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,HIGH);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,LOW);\n      digitalWrite(segDP,LOW);\n      break;\n    case 1:\n      digitalWrite(segA,LOW);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,LOW);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,LOW);\n      digitalWrite(segDP,LOW);\n      break;\n    case 2:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,LOW);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,HIGH);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 3:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 4:\n      digitalWrite(segA,LOW);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,LOW);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 5:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,LOW);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 6:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,LOW);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,HIGH);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 7:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,LOW);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,LOW);\n      digitalWrite(segDP,LOW);\n      break;\n    case 8:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,HIGH);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 9:\n      digitalWrite(segA,HIGH);\n      digitalWrite(segB,HIGH);\n      digitalWrite(segC,HIGH);\n      digitalWrite(segD,HIGH);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,HIGH);\n      digitalWrite(segG,HIGH);\n      digitalWrite(segDP,LOW);\n      break;\n    case 10:\n      digitalWrite(segA,LOW);\n      digitalWrite(segB,LOW);\n      digitalWrite(segC,LOW);\n      digitalWrite(segD,LOW);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,LOW);\n      digitalWrite(segDP,LOW);\n      break;\n    case 11:\n      digitalWrite(segA,LOW);\n      digitalWrite(segB,LOW);\n      digitalWrite(segC,LOW);\n      digitalWrite(segD,LOW);\n      digitalWrite(segE,LOW);\n      digitalWrite(segF,LOW);\n      digitalWrite(segG,LOW);\n      digitalWrite(segDP,HIGH);\n      break;\n  }\n}");Blockly.Arduino.addSetup("fss_s", "pinMode(segA,OUTPUT);\n  pinMode(segB,OUTPUT);\n  pinMode(segC,OUTPUT);\n  pinMode(segD,OUTPUT);\n  pinMode(segE,OUTPUT);\n  pinMode(segF,OUTPUT);\n  pinMode(segG,OUTPUT);\n  pinMode(segDP,OUTPUT);\n  pinMode(digit1,OUTPUT);\n  pinMode(digit2,OUTPUT);\n  pinMode(digit3,OUTPUT);\n  pinMode(digit4,OUTPUT);");return "";};Blockly.Arduino.foursevseg_write=function(a){var b=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.addDeclaration("47seg_c", "void countD() {\n  for (int digit = 1 ; digit < 5 ; digit++) {\n    switch (digit) {\n      case 1:\n        if (figur > 999) {\n          digitalWrite(digit1,LOW);\n          numSegs(figur / 1000);\n          figur %= 1000;\n          if (figur < 100) {\n            tens = true;\n            if (figur < 10) {\n              hundred = true;\n            }\n          } else tens = false;\n        }\n        break;\n      case 2:\n        if (tens == true) {\n          digitalWrite(digit2,LOW);\n          numSegs(0);\n        } if (hundred == true) {\n          break;\n        }\n        if (figur > 99 && figur < 1000) {\n          digitalWrite(digit2,LOW);\n          numSegs(figur / 100);\n          figur %= 100;\n          if (figur < 10) {\n            hundred = true;\n          } else hundred = false;\n        }\n        break;\n      case 3:\n        if (hundred == true) {\n          digitalWrite(digit3,LOW);\n          numSegs(0);\n          break;\n        }\n        if (figur > 9 && figur < 100) {\n          digitalWrite(digit3,LOW);\n          numSegs(figur / 10);\n          figur %= 10;\n        }\n        break;\n      case 4:\n        if (figur < 10) {\n          digitalWrite(digit4,LOW);\n          numSegs(figur);\n          break;\n        }\n    }\n    numSegs(10);\n    digitalWrite(digit1, HIGH);\n    digitalWrite(digit2, HIGH);\n    digitalWrite(digit3, HIGH);\n    digitalWrite(digit4, HIGH);\n  }\n}\n");return "tens = false;\nhundred = false;\nfigur = "+b+";\ncountD();\n"};Blockly.Arduino.foursevseg_setchar=function(a){var b=a.getFieldValue("VAR"),c=["D1"===a.getFieldValue("PIN")?"digit1":"D2"===a.getFieldValue("PIN")?"digit2":"D3"===a.getFieldValue("PIN")?"digit3":"D4"===a.getFieldValue("PIN")?"digit4":""], d="TRUE"===a.getFieldValue("A")?"HIGH":"LOW",e="TRUE"===a.getFieldValue("B")?"HIGH":"LOW",f="TRUE"===a.getFieldValue("C")?"HIGH":"LOW",g="TRUE"===a.getFieldValue("D")?"HIGH":"LOW", h="TRUE"===a.getFieldValue("E")?"HIGH":"LOW",i="TRUE"===a.getFieldValue("F")?"HIGH":"LOW",j="TRUE"===a.getFieldValue("G")?"HIGH":"LOW",k="TRUE"===a.getFieldValue("DP")?"HIGH":"LOW";Blockly.Arduino.addVariable(b, "void "+b+"(int digit, int segA, int segB, int segC, int segD, int segE, int segF, int segG, int segDP) {\n  digitalWrite(digit, LOW);\n  digitalWrite(segA, "+d+");\n  digitalWrite(segB, "+e+");\n  digitalWrite(segC, "+f+");\n  digitalWrite(segD, "+g+");\n  digitalWrite(segE, "+h+");\n  digitalWrite(segF, "+i+");\n  digitalWrite(segG, "+j+");\n  digitalWrite(segDP, "+k+");\n}\n", true);Blockly.Arduino.addSetup("47seg_sc", "digitalWrite(digit1, HIGH);\n  digitalWrite(digit2, HIGH);\n  digitalWrite(digit3, HIGH);\n  digitalWrite(digit4, HIGH);\n");return b+"("+c+",segA,segB,segC,segD,segE,segF,segG,segDP);\n"};Blockly.Arduino.foursevseg_clr=function(a){Blockly.Arduino.addDeclaration("47seg_v", "void clearD(){\n  numSegs(10);\n  digitalWrite(digit1, HIGH);\n  digitalWrite(digit2, HIGH);\n  digitalWrite(digit3, HIGH);\n  digitalWrite(digit4, HIGH);\n}");return "clearD();\n"};Blockly.Arduino.misc={};Blockly.Arduino.shiftout=function(a){var b=a.getFieldValue("DATA"),c=a.getFieldValue("CLK"),d=a.getFieldValue("BO"),e=Blockly.Arduino.valueToCode(a,"BVAL",Blockly.Arduino.ORDER_ATOMIC);return"shiftOut("+b+", "+c+", "+d+", "+e+");\n"};Blockly.Arduino.io_bitset=function(a){var b=Blockly.Arduino.valueToCode(a, "XVAL", Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a, "NVAL", Blockly.Arduino.ORDER_ATOMIC);return"bitSet("+b+", "+c+");\n"};Blockly.Arduino.bitset=function(a){var b=Blockly.Arduino.valueToCode(a, "XVAL", Blockly.Arduino.ORDER_ATOMIC),c=Blockly.Arduino.valueToCode(a, "NVAL", Blockly.Arduino.ORDER_ATOMIC);return"bitSet("+b+", "+c+");\n"};Blockly.Arduino.operation_bitwise=function(a){var b={AND:"&",OR:"|",XOR:"^",NOT:"~",SHIFTLEFT:"<<",SHIFTRIGHT:">>"}[a.getFieldValue("OP")],c="&"==b||"|"==b||"^"==b||"~"==b||"<<"==b||">>"==b?Blockly.Arduino.ORDER_BITWISE_AND:Blockly.Arduino.ORDER_BITWISE_OR,d=Blockly.Arduino.valueToCode(a,"A",c)||"false";a=Blockly.Arduino.valueToCode(a,"B",c)||"false";if(d||a){var e="&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};Blockly.Arduino.attach_interrupt=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.statementToCode(a,"ISR",Blockly.Arduino.ORDER_UNARY_PREFIX),d=a.getFieldValue("MODE");Blockly.Arduino.addDeclaration("ai_d","void ai_func() {\n "+c+"\n}\n");Blockly.Arduino.addSetup("ai_s","attachInterrupt("+b+", ai_func, "+d+");\n");return""};
