// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.de');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Kommentiere";
Blockly.Msg.AUTH = "Bitte erlaube die Software deine Arbeit abzusichern und erlaube diese bei Dir zu .";
Blockly.Msg.CHANGE_VALUE_TITLE = "Verändere Wert:";
Blockly.Msg.CHAT = "Spreche mit deinem Mitarbeiter durch das Drücken der Box!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";
Blockly.Msg.COLLAPSE_ALL = "Minimiere alle Blöcke";
Blockly.Msg.COLLAPSE_BLOCK = "Minimiere diesen Block";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Farbe 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "Farbe 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "Ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "Mix";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mixe 2 Farben zusammen in einer Ratio (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Wähle eine Farbe aus der Palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";
Blockly.Msg.COLOUR_RANDOM_TITLE = "Zufallsfarbe";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Wähle eine Farbe durch Zufall.";
Blockly.Msg.COLOUR_RGB_BLUE = "Blau";
Blockly.Msg.COLOUR_RGB_GREEN = "Grün";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "Rot";
Blockly.Msg.COLOUR_RGB_TITLE = "Farbe mit";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Erzeuge eine Farbe in bestimmtem Mix von Rot, Grün und Blau. Alle Werte müssen zwischen 0 and 100 liegen.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "Beende Schleife";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "Fahre mit nächster Interation in der Schleife fort.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Breche aus dieser Schleife aus.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Überspringe den Rest der Schleife und fahre mit der naechsten Iteration fort.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warnung: Dieser Block wird von der Schleife genutzt.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "für jedes Element %1 in der Liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Für jedes Element in der List, führe die Variable '%1' zum Element, dann führe einige Statements durch.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";
Blockly.Msg.CONTROLS_FOR_TITLE = "zähle mit %1 von %2 zu %3 bei %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Variable '%1' übernimmt Werte von der Startnummer zur Endnummer, durch das Durchzählen mit einem bestimmten Abstand.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Addiere eine Kondition zum Wenn Block.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Addiere eine letztendliche allgemeine Kondition zum Wenn Block.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Addiere, entferne, oder ordne Sektionen neu um diesen Block zu rekonfigurieren.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sonst";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "anderenfalls";
Blockly.Msg.CONTROLS_IF_MSG_IF = "wenn";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Wenn ein Wert wahr ist, dann führe die Statements aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Wenn der Wert wahr ist, dann führe den ersten Block mit Statements aus. Ansonsten führe den zweiten Block von Statements aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Wenn ein Wert wahr ist, dann führe den ersten Block von Statements aus. Anderenfalls, wenn der zweite Wert wahr ist, führe den zweiten Block der Statements aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Wenn der Wert wahr ist, dann führe den ersten Block von Statements aus. Anderenfalls, wenn der zweite Wert wahr ist, führe den zweiten Block der Statements aus. Wenn keine der Werte wahr ist, führe den letzten Block mit Statements aus.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "Tue";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "Wiederhole %1 mal";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Tue einige Statements mehrere Male.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Wiederhole bis";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Wiederhole während";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Während ein Wert falsch ist, führe einige Statements aus.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Während ein Wert richtig ist, führe einige Statements aus.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Lösche %1 Blöcke?";
Blockly.Msg.DELETE_BLOCK = "Lösche Block";
Blockly.Msg.DELETE_X_BLOCKS = "Lösche %1 Blöcke";
Blockly.Msg.DISABLE_BLOCK = "Deaktiviere Block";
Blockly.Msg.DUPLICATE_BLOCK = "Dupliziere";
Blockly.Msg.ENABLE_BLOCK = "Aktiviere Block";
Blockly.Msg.EXPAND_ALL = "Maximiere Blöcke";
Blockly.Msg.EXPAND_BLOCK = "Maximiere Block";
Blockly.Msg.EXTERNAL_INPUTS = "Externe Eingänge";
Blockly.Msg.HELP = "Hilfe";
Blockly.Msg.INLINE_INPUTS = "Innere Eingänge";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "Erzeuge leere Liste";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Gibt eine Liste mit der Länge von 0, welche keine Daten beinhaltet";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "Liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Addiere, entferne, oder ordne Sektion neu um die Liste von Blöcken zu rekonfigurieren.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "Erzeuge eine List mit";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Addiere ein Element zur Liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Erzeuge eine Liste mit einer beliebigen Zahl von Elementen.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "Erste";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# vom Ende";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "Erhalte";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "Erhalte und entferne";
Blockly.Msg.LISTS_GET_INDEX_LAST = "Letzte";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "Zufällig";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "Entferne";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Erhalte erstes Element in der Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Erhalte eine Element an eine spezifischen Position der Liste. #1 ist das letzte Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Erhalte eine Element an eine spezifischen Position der Liste. #1 ist das erste Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Erhalte das letzte Element der Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Erhalte ein Element einer zufälligen Position.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Erhalte und fragt erstes Element der Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Entfernt und erhalte das Element in eine bestimmten Position. #1 ist das letzte Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Entfernt und erhalte das Element in eine bestimmten Position. #1 ist das erste Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Entfernt und erhalte das letzte Element der Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Entfernt und erhalte ein zufälliges Element einer Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Entfernt erstes Element einer Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Entfernt Element einer spezifischen Position. #1 ist das letzte Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Entfernt Element einer spezifischen Position. #1 ist das erste Element.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Entfernt das letzte Element einer Liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Entfernt Element in einer zufälligen Position.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "zu # vom Ende";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "zu #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "zum Letzten";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "Erhalte Unterliste vom Ersten";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "Erhalte Unterliste von # vom Ende";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "Erhalte Unterlist von #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Erzeugt eine Kopie von einem spezifischen Teil einer Liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg.LISTS_INDEX_OF_LAST = "Finde letztes Vorkommen eines Elements";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Erhalte den Index des ersten/letzten Vorkommens eines Elements in einer Liste. Erhalte 0 wenn kein Element gefunden wurde.";
Blockly.Msg.LISTS_INLIST = "In der Liste";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 ist leer";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Erhalte Wahr wenn Liste leer ist.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";
Blockly.Msg.LISTS_LENGTH_TITLE = "Länge von %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Erhalte die Länge der Liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_REPEAT_TITLE = "Erzeuge eine Liste mit Element %1 wiederholt bei %2";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Erzeugt Liste welche einen Wert mit einer spezifischen Nummer wiederholt.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "Als";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "Füge ein in";
Blockly.Msg.LISTS_SET_INDEX_SET = "Setze";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Fügt Element am Anfang der Liste ein.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Fügt Element in einer spezifischen Position ein. #1 ist letztes Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Fügt Element in einer spezifischen Position ein. #1 ist erstes Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Fügt Element am Ende der Liste hinzu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Fügt Element in einer zufälligen Position ein.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fügt Element an erster Position ein.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fügt das Element in einer spezifischen Position ein. #1 ist letztes Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fügt das Element in einer spezifischen Position ein. #1 ist erstes Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fügt Element als Letztes in die Liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fügt eine zufälliges Element in Liste ein.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "Aufsteigend";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "Absteigend";
Blockly.Msg.LISTS_SORT_TITLE = "Sortiere %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sortiere eine Kopie einer Liste.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "Alphabetisch, ignoriere Grossschreibung";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "Numerisch";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "Alphabetisch";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "Mache eine List vom Text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "Mache einen Text von der Liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Verbinde Listen von Text zu einem Text der die Texte mit einem Trennzeichen teilt.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Spalte den Text in eine Liste von Text, welcher mit Trennzeichen geteilt ist.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "Mit Trennzeichen";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "Falsch";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Erhalte entweder Wahr oder Falsch.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "Wahr";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Erhalte Wahr wenn beide Werte gleich sind.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Erhalte Wahr wenn erster Wert grösser als der zweite Wert ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Erhalte Wahr wenn der erste Wert grösser als oder gleich wie der zweite Wert ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Erhalte Wahr wenn der erste Wert kleiner ist als der zweite Wert.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Erhalte Wahr wenn der erste Wert kleiner als oder gleich mit dem zweiten Wert ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Erhalte Wahr wend beide Werte ungleich zueinander sind.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg.LOGIC_NEGATE_TITLE = "Nicht %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Erhalte Wahr wenn der Wert Falsch ist. Erhalte Falsch wenn der Wert Wahr ist.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Erhalte Null.";
Blockly.Msg.LOGIC_OPERATION_AND = "und";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";
Blockly.Msg.LOGIC_OPERATION_OR = "oder";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Erhalte Wahr wenn beide Eingänge Wahr sind.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Erhalte Wahr wenn wenigsten eine der Eingänge Wahr ist.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "Test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "Wenn Falsch";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "Wenn Wahr";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check die Kondition in 'Test'. Wenn die Kondition Wahr ist, erhalte den Wert unter Wenn Wahr, sonst den Wert von Wenn Falsch.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Ergebnis aus der Summe zweier Nummern.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Ergebnis aus dem Quotient zweier Nummern.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Ergebnis durch Substaktion zweier Nummern.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Ergebnis durch Muliplikation zweier Nummern.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Ergebnis aus erste Nummer hoch zweite Nummer.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "Ändere %1 bei %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Addiere eine Nummer zur Variablen '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Ergebnis aus bekannten Konstanten: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "Limitiere %1 mindest %2  maximal %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitiere eine Nummer zwischen min und max.";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "Ist teilbar bei";
Blockly.Msg.MATH_IS_EVEN = "Ist gleich";
Blockly.Msg.MATH_IS_NEGATIVE = "Ist negativ";
Blockly.Msg.MATH_IS_ODD = "Ist ungerade";
Blockly.Msg.MATH_IS_POSITIVE = "Ist positiv";
Blockly.Msg.MATH_IS_PRIME = "Ist Primzahl";
Blockly.Msg.MATH_IS_TOOLTIP = "Check ob eine Nummer gleich, ungerade, Primzahl, voll, positiv, negativ, oder teilbar ist. Erhalte Wahr oder Falsch.";
Blockly.Msg.MATH_IS_WHOLE = "Ist ganz";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "Rest von %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Erhalte Rest von dividierten Nummern.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Eine Nummer.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "Durchschnitt der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "Maximum der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "Mittelwert der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "Minimum der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Häufigste der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "Zufallselement der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "Standardabweichung der Liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "Summe der Liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Erhalte den Durchschnitt (arithmetic mean) der numerischen Werte in einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Erhalte die höchste Nummer in einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Erhalte den Mittelwert einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Erhalte die kleinste Nummer einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Erhalte häufigste Nummer einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Erhalte eine Zufallsnummer der Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Erhalte die Standardabweichung der Nummern in einer Liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Erhalte die Summe aller Nummern in einer Liste.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "Zufallsbruch";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Erhalte Zufallswert zwischen 0.0 (inclusive) und 1.0 (exclusive).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "Zufallsnummer zwischen %1 und %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Erhalte Zufallsnummer innerhalb eines Bereiches.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "Runde";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "Runde hoch";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "Runde ab";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Runde eine Nummer hoch oder ab.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "Absolute";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "Wurzel";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Erhalte die Absolute einer Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Erhalte die Exponent aus einer Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Erhalte Logarithmus einer Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Erhalte die Basis 10 Logarithmus einer Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Erhalte die Negation einer Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Erhalte 10 hoch der Nummer.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Erhalte die Wurzel aus einer Nummer.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "acos";
Blockly.Msg.MATH_TRIG_ASIN = "asin";
Blockly.Msg.MATH_TRIG_ATAN = "atan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Ergebnis des Arkuskosinus einer Nummer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Ergebnis des Arkussinus einer Nummer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Ergebnis des Arkustangente einer Nummer.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Ergebnis des Cosinus eines Grades (nicht Radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Ergebnis des Sinus eines Grades (nicht Radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Ergebnis der Tangente eines Grades (nicht Radian).";
Blockly.Msg.ME = "Me";
Blockly.Msg.NEW_VARIABLE = "Neue Variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Neuer Variable Name:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "Erlaube Statements";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Starte benutzerdefinierte Funktion '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Benutze eine benutzerdefinierte Funktion '%1' und nutze den Ausgang.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Create '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Beschreibe diese Funktion...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "Mache etwas";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "zu";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Erzeuge eine Funktion ohne Ausgang.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "return";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Erzeuge eine Funktion mit Ausgang.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warnung: Diese Funktion hat Duplikate.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight Funktionsdefinition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Wenn der Wert Wahr ist, dann gebe den zweiten Wert weiter.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warnung: Dieser Block sollte nur innerhalb einer Funktionsdefinition genutzt werden.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Eingang Name:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Addiere Eingang zur Funktion.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Eingang";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Addiere, entferne oder ordne Inputs neu zu dieser Funktion.";
Blockly.Msg.REDO = "Redo";
Blockly.Msg.REMOVE_COMMENT = "Entferne Kommentar";
Blockly.Msg.RENAME_VARIABLE = "Benenne Variable um...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Benenne alle '%1' Variablen um zu:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "Füge Text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_APPEND_TO = "zu";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Füge Text zur Variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "In Kleinschreibung";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "Als Überschrift";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "In Grossschreibung";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Erhalte Kopie vom Text mit anderer Gross/Kleinschreibung";
Blockly.Msg.TEXT_CHARAT_FIRST = "Erhalte ersten Buchstaben";
Blockly.Msg.TEXT_CHARAT_FROM_END = "Erhalte Buchstabe # vom Ende";
Blockly.Msg.TEXT_CHARAT_FROM_START = "Erhalte Buchstabe #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "Im Text";
Blockly.Msg.TEXT_CHARAT_LAST = "Erhalte letzten Buchstaben";
Blockly.Msg.TEXT_CHARAT_RANDOM = "Erhalte Zufallsbuchstaben";
Blockly.Msg.TEXT_CHARAT_TAIL = "";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Erhalte den Buchstaben in spezifischer Position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Addiere ein Element zum Text.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "Verbinde";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Addiere, entferne, oder ordne Sektionen neu um den Textblock zu rekonfigurieren.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "Zum Buchstaben # vom Ende";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "Zum Buchstaben #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "Zum letzten Buchstaben";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "Im Text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "Erhalte Untertext vom ersten Buchstaben";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "Erhalte Untertext vom Buchstaben # vom Ende";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "Erhalte Untertext vom Buchstaben #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Erhalte einen Teil des Textes.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "Im Text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "Finde erste Erscheinung des Textes";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "Finde letzte Erscheinung des Textes";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Erhalte index von der ersten/letzen Erscheinung des ersten Textes im zweitem Text, jedoch 0 falls der Text leer ist.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 ist leer";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Ist Wahr wenn der erhaltene Text leer ist.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "Erzeuge Text mit";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Erzeuge einen Text durch die Verbindung verschiedener Elemente.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "Länge von %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Erhalte die Nummer der Buchstaben (inklusive Leerzeichen) von verlinktem Text.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";
Blockly.Msg.TEXT_PRINT_TITLE = "Drucke %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Drucke einen spezifischen Text, Nummer oder anderen Wert.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Frage den Benutzer nach einer Nummer.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Frage Benutzer nach eine Nachricht.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Frage nach Nachricht mit Nummer";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Frage nach Textnachricht";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Einen Buchstaben, Wort oder eine Zeile Text.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "Trimme Leerzeichen von beiden Seiten von";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "Trimme Leerzeichen von der linken Seite von";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "Trimme Leerzeichen von der rechten Seite von";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Erhalte eine Kopie mit Leerzeichen entfernt von einem oder beiden Enden.";
Blockly.Msg.TODAY = "Heute";
Blockly.Msg.UNDO = "Undo";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "Element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Create 'Setze %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Erhalte den Wert von dieser Variable.";
Blockly.Msg.VARIABLES_SET = "Setze %1 zu %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Erzeuge 'Erhalte %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setze diese Variable gleich zum Input.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LOGIC_OPERATION_NOT = "nicht";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_NOT = "Wenn die Kondition Wahr ist dann wird der logische NOT Operator es als Falsch setzen.";
Blockly.Msg.BITWISE_OPERATION_AND = '&';
Blockly.Msg.BITWISE_OPERATION_OR = '|';
Blockly.Msg.BITWISE_OPERATION_XOR = '^';
Blockly.Msg.BITWISE_OPERATION_NOT = '~';
Blockly.Msg.BITWISE_OPERATION_SHIFTLEFT = '<<';
Blockly.Msg.BITWISE_OPERATION_SHIFTRIGHT = '>>';
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_AND = "Binär AND Operator kopiert das Bit wenn beide die der Operatoren existieren.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_OR = "Binär OR Operator kopiert das Bit wenn es in einen der Beiden existiert";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_XOR = "Binär XOR Operator kopiert das Bit wenn es keiner der Operatoren ist, jedoch nicht Beide.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_NOT = "Binär NOT ergenzender Operator ist unär und hat den Effekt Bits umzukehren.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTLEFT = "Der Wert des linke Operanden bewegt sich bei einer Nummer von Bits nach Links spezified beim Wert des Rechten Operanden.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTRIGHT = "Der Wert des linke Operanden bewegt sich bei einer Nummer von Bits nach Rechts spezified beim Wert des Rechten Operanden.";

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "Lese analog Pin#";
Blockly.Msg.ARD_ANALOGREAD_TIP = "Erhalte Wert zwischen 0 und 1024";
Blockly.Msg.ARD_ANALOGWRITE = "Setze analog Pin#";
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Schreibe analogen Wert zwischen 0 and 255 zu einem spezifischen PWM Port";
Blockly.Msg.ARD_BUILTIN_LED = "Setze built-in LED";
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Licht an/aus für die integrierten LED des Arduino";
Blockly.Msg.ARD_COMPONENT_WARN1 = "Ein %1 Konfigurationsblock mit dem selben %2 Namen muss hinzugefügt werden, um diesen Block zu nutzen!";
Blockly.Msg.ARD_DEFINE = "Definiere";
Blockly.Msg.ARD_DIGITALREAD = "Lese digital Pin#";
Blockly.Msg.ARD_DIGITALREAD_TIP = "Lese digital Wert am Pin: HIGH or LOW";
Blockly.Msg.ARD_DIGITALREAD_PULLUP = "Lese digital mit PULL_UP Modus Pin#";
Blockly.Msg.ARD_DIGITALREAD_PULLUP_TIP = "Lese digitalen Wert vom Pin mit internen resistor: HIGH or LOW";
Blockly.Msg.ARD_DIGITALWRITE = "Setze digitale Pin#";
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Schreibe digitalen Wert HIGH oder LOW zu spezifischen Port";
Blockly.Msg.ARD_MKPAD_SETUP = 'Setup 4x4 Membrane Keypad (mkpad4x4) mit';
Blockly.Msg.ARD_MKPAD_ROW1 = 'Reihe 1 Pin#';
Blockly.Msg.ARD_MKPAD_ROW2 = 'Reihe 2 Pin#';
Blockly.Msg.ARD_MKPAD_ROW3 = 'Reihe 3 Pin#';
Blockly.Msg.ARD_MKPAD_ROW4 = 'Reihe 4 Pin#';
Blockly.Msg.ARD_MKPAD_COL1 = 'Spalte 1 Pin#';
Blockly.Msg.ARD_MKPAD_COL2 = 'Spalte 2 Pin#';
Blockly.Msg.ARD_MKPAD_COL3 = 'Spalte 3 Pin#';
Blockly.Msg.ARD_MKPAD_COL4 = 'Spalte 4 Pin#';
Blockly.Msg.ARD_MKPAD_SETUP_TIP = 'Setup 4x4 Membrane Keypad mit selektierten Pins für eine 4x4 Matrix';
Blockly.Msg.ARD_MKPAD_GETKEY = 'Erhalte Tastendruck vom mkpad4x4 auf Reihe 1 pin#';
Blockly.Msg.ARD_MKPAD_GETKEY_TIP = 'Erhalte gepresste Taste vom 4x4 Membrane Keypad';
Blockly.Msg.ARD_IRRECV_SETUP = 'Setup IR Fernbedienung mit Pin#';
Blockly.Msg.ARD_IRRECV_SETUP_TIP = 'Setup des Infrared Receiver Moduls KY-022';
Blockly.Msg.ARD_IRRECV_READ = 'Lese Wert von IR Remote Control Pin#';
Blockly.Msg.ARD_IRRECV_READ_AS = ' als Variable ';
Blockly.Msg.ARD_IRRECV_DEFAULT_NAME = 'Knopf#';
Blockly.Msg.ARD_IRRECV_READ_TIP = 'Erhalte Wert vom KY-022 Infrared Receiver Modul als Text';
Blockly.Msg.ARD_RC522_SETUP = 'Setup RFID mit RST Pin#';
Blockly.Msg.ARD_RC522_SETUP_SS = 'und SS Pin#';
Blockly.Msg.ARD_RC522_SETUP_TIP = 'Setup vom RFID RC522 Identity Scanner Modul';
Blockly.Msg.ARD_RC522_GETUID = 'RFID RC522 >> Lese UID';
Blockly.Msg.ARD_RC522_GETUID_TIP = 'Liest Identifizierung # von Karte oder Dongle mit RFID RC522 Identity Scanner Modul';
Blockly.Msg.ARD_RC522_ADDUID = 'RFID RC522 >> Addiere neue UID';
Blockly.Msg.ARD_RC522_ADDUID_AS = ' als ';
Blockly.Msg.ARD_RC522_ADDUID_TIP = 'Addiere UID als Text z.B. A1 B2 C3 D4';
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino Unendlichschleife:";
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino Vorlauf:";
Blockly.Msg.ARD_FUN_RUN_TIP = "Definiert die Arduino setup() und loop() Funktionen.";
Blockly.Msg.ARD_HIGH = "HIGH";
Blockly.Msg.ARD_HIGHLOW_TIP = "Setze einen Pin Status hoch (High) oder runter (low).";
Blockly.Msg.ARD_LOW = "LOW";
Blockly.Msg.ARD_NOTONE = "Stoppe Ton von Pin #";
Blockly.Msg.ARD_NOTONE_PIN = "Keinen Ton PIN#";
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stoppe den generierten Ton von Pin";
Blockly.Msg.ARD_NOTONE_TIP = "Schaltet den Ton am selektierten Pin aus";
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 ist notwendig für %2 als Pin %3. Bereits genutzt als %4.";
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Messe die Dauer eines Pulses von einem Pin, wenn es innerhalb eines Zeitraumes in Millisekunden geschieht.";
Blockly.Msg.ARD_PULSE_READ = "Messe %1 Puls von Pin #%2";
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "Messe %1 Puls von Pin #%2 (Auszeit nach %3 μs)";
Blockly.Msg.ARD_PULSE_TIP = "Messe die Dauer eines Pulses vom selektierten Pin.";
Blockly.Msg.ARD_SERIAL_BPS = "bps";
Blockly.Msg.ARD_SERIAL_PRINT = "Drucke";
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "Addiere neue Zeile";
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Zeige Daten in der Konsole/Serial Port als menschenlesbaren ASCII Text.";
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "Ein Setup Block für %1 muss zur Arbeitsfläche addiert werden, um den Block zu nutzen!";
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Wählt Geschwindigkeit für spezifische Serial Peripherie";
Blockly.Msg.ARD_SERIAL_SPEED = ":  Geschwindigkeit zu";
Blockly.Msg.ARD_SERVO_READ = "Lese SERVO vom PIN#";
Blockly.Msg.ARD_SERVO_READ_TIP = "Lese einen Servo Winkel";
Blockly.Msg.ARD_SR04_SETUP = 'Setup HC-SR04 mit Echo Pin#';
Blockly.Msg.ARD_SR04_SETUP_AND = 'und Auslöser Pin#';
Blockly.Msg.ARD_SR04_SETUP_TIP = 'Setup HC-SR04 Sensor';
Blockly.Msg.ARD_SR04_READ = 'Lese HC-SR04 vom Echo PIN#';
Blockly.Msg.ARD_SR04_READ_TIP = 'Lese Distanz via HC-SR04 Modul';
Blockly.Msg.ARD_DHT11_SETUP = 'Setup DHT11 Sensor mit Pin#';
Blockly.Msg.ARD_DHT11_SETUP_TIP = 'Setup DHT11 Temperatur und Feuchtigkeits Sensor';
Blockly.Msg.ARD_DHT11_READT = 'Lese Temperatur mit DHT11 von PIN#';
Blockly.Msg.ARD_DHT11_READT_TIP = 'Messe Temperatur mit DHT11 Sensor';
Blockly.Msg.ARD_DHT11_READH = 'Lese Feuchtigkeit mit DHT11 von PIN#';
Blockly.Msg.ARD_DHT11_READH_TIP = 'Messe Feuchtigkeit mit DHT11 Sensor';
Blockly.Msg.ARD_GY521_SETUP = 'Setup GY-521 Gyroscope mit A4(SDA) | A5(SCL) Pins';
Blockly.Msg.ARD_GY521_SETUP_TIP = 'Setup um Beschleunigung, Winkelgrad und Temperatur mit GY-512 Sensor zu messen';
Blockly.Msg.ARD_GY521_ROT = 'GY-521 >> Messe Winkelgrad von ';
Blockly.Msg.ARD_GY521_ROT_TIP = 'Messe Winkel von x, y und z Achse in Grad mit GY-512 Sensor';
Blockly.Msg.ARD_GY521_T = 'GY-521 >> Lese Temperatur: ';
Blockly.Msg.ARD_GY521_T_TIP = 'Lese Temperatur mit GY-512 Sensor';
Blockly.Msg.ARD_GY521_X = 'X: ';
Blockly.Msg.ARD_GY521_Y = 'Y: ';
Blockly.Msg.ARD_GY521_Z = 'und Z: ';
Blockly.Msg.ARD_SERVO_WRITE = "Setze SERVO zum Pin";
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Winkelgrad (0~180)";
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Setze ein Servomotor zu einem spezifischen Winkel";
Blockly.Msg.ARD_SERVO_WRITE_TO = "zu";
Blockly.Msg.ARD_SETTONE = "Setze Ton zu pin #";
Blockly.Msg.ARD_SPI_SETUP = "Setup";
Blockly.Msg.ARD_SPI_SETUP_CONF = "Konfiguration:";
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "Datenverschiebung";
Blockly.Msg.ARD_SPI_SETUP_TIP = "Konfiguriere die SPI peripher.";
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Sende eine SPI Nachtricht zu einem spezifischen Gerät und erhalte Daten zurück.";
Blockly.Msg.ARD_SPI_TRANS_NONE = "Nichts";
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "zum Gerät pin";
Blockly.Msg.ARD_SPI_TRANS_TIP = "Sende eine SPI Nachricht zu einem spezifischen Gerät.";
Blockly.Msg.ARD_SPI_TRANS_VAL = "Transferiere";
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "Ein Setup Block für %1 muss zur Arbeitfläche dazu um den Block zu nutzen!";
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Alter Pin Wert %1 ist nicht mehr verfügbar.";
Blockly.Msg.ARD_STEPPER_COMPONENT = "Stepper";
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MeinStepper";
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";
Blockly.Msg.ARD_STEPPER_MOTOR = "Steppermotor:";
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Nummer von Pins";
Blockly.Msg.ARD_STEPPER_PIN1 = "Pin1#";
Blockly.Msg.ARD_STEPPER_PIN2 = "Pin2#";
Blockly.Msg.ARD_STEPPER_PIN3 = "Pin3#";
Blockly.Msg.ARD_STEPPER_PIN4 = "Pin4#";
Blockly.Msg.ARD_STEPPER_REVOLVS = "Wieviel Schritte pro Umdrehung";
Blockly.Msg.ARD_STEPPER_SETUP = "Setup Steppermotor";
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Konfiguriere ein Steppermotor mit pinout und anderen Settings.";
Blockly.Msg.ARD_STEPPER_SPEED = "Setze Geschwindigkeit (rpm) zu";
Blockly.Msg.ARD_STEPPER_STEP = "Bewege Motor";
Blockly.Msg.ARD_STEPPER_STEPS = "Schritte";
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Dreht den Stepper Motor ein bestimmte Zahl von Schritten.";
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";
Blockly.Msg.ARD_TIME_DELAY = "Warte";
Blockly.Msg.ARD_TIME_DELAY_MICROS = "Mikrosekunden";
Blockly.Msg.ARD_TIME_DELAY_MICROS_TIP = "Warte eine gewisse Zeit in Mikrosekunden";
Blockly.Msg.ARD_TIME_DELAY_TIP = "Warte eine spezifische Zeit in Millisekunden";
Blockly.Msg.ARD_TIME_INF = "Warte für immer (Programm Ende)";
Blockly.Msg.ARD_TIME_INF_TIP = "Warte unbegrenzte Zeit, stoppe das Programm.";
Blockly.Msg.ARD_TIME_MICROS = "Momentane Zeit vergannen (Mikrosekunden)";
Blockly.Msg.ARD_TIME_MICROS_TIP = "Gibt Zeit in Microsekunden an, welche seit start des Arduino Boards abgelaufen ist. Dies muss mit einer positiven langen Nummer gespeichert werden.";
Blockly.Msg.ARD_TIME_MILLIS = "Momentane Zeit vergannen (Millisekunden)";
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Zeigt Millisekunden welche seit Arduino angestellt wurde. Muss mit einer langen Nummer gespeichert werden";
Blockly.Msg.ARD_TIME_MS = "Millisekunden";
Blockly.Msg.ARD_DS3231_SETUP = 'Setup Echtzeituhr auf Pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETUP_TIP = 'Einrichtung des RTC Echtzeit Moduls (DS3231) auf pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETCLOCK = 'Stelle Uhr vom RTC (DS3231) manual ein';
Blockly.Msg.ARD_DS3231_SETDATE = 'mit Datum: ';
Blockly.Msg.ARD_DS3231_SETTIME = 'und Zeit: ';
Blockly.Msg.ARD_DS3231_SETCLOCK_TIP = 'AKTIVIERE NUR DANN, WENN DU MANUAL DATUM UND ZEIT EINSTELLEN WILLST';
Blockly.Msg.ARD_DS3231_READ = 'Lese Datum und Zeit vom RTC Modul';
Blockly.Msg.ARD_DS3231_READYEAR = 'Jahr: ';
Blockly.Msg.ARD_DS3231_READMONTH = 'Monat: ';
Blockly.Msg.ARD_DS3231_READDAY = 'Tag: ';
Blockly.Msg.ARD_DS3231_READHOUR = 'Stunde: ';
Blockly.Msg.ARD_DS3231_READMINUTE = 'Minute: ';
Blockly.Msg.ARD_DS3231_READSECOND = 'Sekunde: ';
Blockly.Msg.ARD_DS3231_READ_TIP = 'Erhalte Datum und Zeit als Variable für jeden Eintrag';
Blockly.Msg.ARD_TONEFREQ = "auf Frequenz";
Blockly.Msg.ARD_TONE_FREQ = "Frequenz";
Blockly.Msg.ARD_TONE_PIN = "Ton PIN#";
Blockly.Msg.ARD_TONE_PIN_TIP = "Generiere Audioton auf Pin";
Blockly.Msg.ARD_TONE_TIP = "Bestimme Ton zum Pin mit Frequenz innerhalb dem Bereich 31 - 65535";
Blockly.Msg.ARD_TONE_WARNING = "Frequenz muss im Bereich 31 - 65535 liegen";
Blockly.Msg.ARD_MAP = 'Relativiere %1 vonUnten %2 vonOben %3 bisUnten %4 bisOben %5';
Blockly.Msg.ARD_MAP_TIP = "Relativiere eine Nummer von ein Grenzbereich zu einem anderen Grenzbereich.";
Blockly.Msg.ARD_MAX7219_SETUP_DIN = 'Setup MAX7219 auf DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CS = ', CS Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CLK = ' und CLK Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_TIP = 'Setup MAX7219 8x8 LED Matrix modul';
Blockly.Msg.ARD_MAX7219_SETCHAR = 'Erzeuge Character MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETCHAR_TIP = 'Erzeuge Character für MAX7219 auf DIN Pin';
Blockly.Msg.ARD_MAX7219_CLR = 'Lösche Anzeige MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_CLR_TIP = 'Lösche Anzeige vom MAX7219 auf DIN Pin';
Blockly.Msg.ARD_LCD1602_SETUP = 'Setup LCD 16x2 auf digitalen Pins';
Blockly.Msg.ARD_LCD1602_SETUP_PINS = '>>RS:7 >>E:8 >>DB4:';
Blockly.Msg.ARD_LCD1602_SETUP_DB5 = '>>DB5:';
Blockly.Msg.ARD_LCD1602_SETUP_DB6 = '>>DB6:';
Blockly.Msg.ARD_LCD1602_SETUP_DB7 = '>>DB7:';
Blockly.Msg.ARD_LCD1602_SETUP_TIP = 'Setup LCD 16x2 mit digitalen Pins\n RS(7), E(8), DB4, DB5, DB6, and DB7';
Blockly.Msg.ARD_LCD1602_WRITE = 'LCD 16x2 >> Schreibe zur Anzeige ';
Blockly.Msg.ARD_LCD1602_LINE1 = '1. Zeile: ';
Blockly.Msg.ARD_LCD1602_LINE2 = '2. Zeile: ';
Blockly.Msg.ARD_LCD1602_WRITE_TIP = 'Schreibe Textlinien zur Anzeige';
Blockly.Msg.ARD_LCD1602_CLR = 'Lösche LCD 16x2 Anzeige';
Blockly.Msg.ARD_LCD1602_CLR_TIP = 'Lösche Anzeige von LCD 16x2';
Blockly.Msg.ARD_SEVSEG = 'Setup 7 Segment Anzeige mit 74HC595';
Blockly.Msg.ARD_SEVSEG_TIP = 'Setzt tabelle von 10 Ziffern für 7 Segment Anzeige welche mit shiftregister 74HC595 verbunden ist';
Blockly.Msg.ARD_SEVSEG_WRITE = '7 Segment Anzeige >> Schreibe Ziffer ';
Blockly.Msg.ARD_SEVSEG_WRITE_TIP = 'Schreib Ziffer 0...9 zur 7 Segment Anzeige + shiftregister 74HC595';
Blockly.Msg.ARD_FOURSEVSEG = 'Setup 4 x 7 Segment Anzeige zur Pin# ';
Blockly.Msg.ARD_FOURSEVSEG_SEGA = 'A:';
Blockly.Msg.ARD_FOURSEVSEG_SEGB = 'B:';
Blockly.Msg.ARD_FOURSEVSEG_SEGC = 'C:';
Blockly.Msg.ARD_FOURSEVSEG_SEGD = 'D:';
Blockly.Msg.ARD_FOURSEVSEG_SEGE = 'E:';
Blockly.Msg.ARD_FOURSEVSEG_SEGF = 'F:';
Blockly.Msg.ARD_FOURSEVSEG_SEGG = 'G:';
Blockly.Msg.ARD_FOURSEVSEG_SEGDP = 'DP:';
Blockly.Msg.ARD_FOURSEVSEG_DIG1 = 'D1:';
Blockly.Msg.ARD_FOURSEVSEG_DIG2 = 'D2:';
Blockly.Msg.ARD_FOURSEVSEG_DIG3 = 'D3:';
Blockly.Msg.ARD_FOURSEVSEG_DIG4 = 'D4:';
Blockly.Msg.ARD_FOURSEVSEG_TIP = 'Setzt eine Tabelle von 10 Ziffern für 4 Ziffer 7 Segment Anzeige direkt mit Pins zu jedem Segment und Ziffer';
Blockly.Msg.ARD_FOURSEVSEG_WRITE = '4 x 7 Segment Anzeige >> Schreibe Ziffer / Char ';
Blockly.Msg.ARD_FOURSEVSEG_WRITE_TIP = 'Schreibt Ziffer 0...9 oder Punkt zur 4 digit 7 Segment Anzeige';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR = '4 x 7 Segment Anzeige >> Erzeuge Char ';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR_TIP = 'Erzeugt einen Character für 4 x 7 Segment Anzeige welches via Schreib Ziffer/Char genutzt werden kann';
Blockly.Msg.ARD_FOURSEVSEG_CLR = '4 x 7 Segment Anzeige >> Lösche Anzeige';
Blockly.Msg.ARD_FOURSEVSEG_CLR_TIP = 'Löscht und schaltet aus 4 Digit 7 Segment Anzeige';
Blockly.Msg.ARD_SHIFTOUT = 'shiftOut >> Daten#';
Blockly.Msg.ARD_SHIFTOUT_C = 'Clk#';
Blockly.Msg.ARD_SHIFTOUT_O = 'Ordnung';
Blockly.Msg.ARD_SHIFTOUT_B = 'byteVal';
Blockly.Msg.ARD_SHIFTOUT_TIP = 'Verschiebe ein Byte von Daten jedesmal um ein Bit shiftOut(). Ordnung Links zu Rechts, oder Rechts zu Links';
Blockly.Msg.ARD_BITSET_1 = 'Setze Variable von';
Blockly.Msg.ARD_BITSET_2 = 'zum Bit';
Blockly.Msg.ARD_BITSET_TIP = 'bitSet() >> Setzt (schreibt eine 1 zu) Bits eines numerischen Wertes';
Blockly.Msg.ARD_ATTACHINTERRUPT = 'Binde an Unterbrecher Pin#';
Blockly.Msg.ARD_ATTACHINTERRUPT_FUNC = 'Funktion';
Blockly.Msg.ARD_ATTACHINTERRUPT_MODE = 'im Modus';
Blockly.Msg.ARD_ATTACHINTERRUPT_TIP = 'Nutzvoll um Dinge in Mikrokontrollern automatisch zu arrangieren, z.B. das Lesen eines Rotationsencoder, Potentiometer oder den Benutzereingang zu überwachen.';
Blockly.Msg.ARD_TYPE_ARRAY = "Array";
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";
Blockly.Msg.ARD_TYPE_CHAR = "Character";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "UnterblockVermisst";
Blockly.Msg.ARD_TYPE_DECIMAL = "Dezimal";
Blockly.Msg.ARD_TYPE_DOUBLE = "Doppelt";
Blockly.Msg.ARD_TYPE_LONG = "Grosse Number";
Blockly.Msg.ARD_TYPE_NULL = "Null";
Blockly.Msg.ARD_TYPE_NUMBER = "Nummber";
Blockly.Msg.ARD_TYPE_SHORT = "Kurze Nummer";
Blockly.Msg.ARD_TYPE_TEXT = "Text";
Blockly.Msg.ARD_TYPE_UNDEF = "Undefiniert";
Blockly.Msg.ARD_VAR_AS = "als";
Blockly.Msg.ARD_VAR_AS_TIP = "Setze einer Wert zu einem spezifischen Datentyp";
Blockly.Msg.ARD_WRITE_TO = "zu";
Blockly.Msg.NEW_INSTANCE = "Neue Instanz...";
Blockly.Msg.NEW_INSTANCE_TITLE = "Neuer Instanz Name:";
Blockly.Msg.RENAME_INSTANCE = "Nenne Instanz um...";
Blockly.Msg.RENAME_INSTANCE_TITLE = "Entferne alle '%1' Instanzen zu:";
