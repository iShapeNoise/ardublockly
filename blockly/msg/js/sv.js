// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sv');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Lägg till kommentar";
Blockly.Msg.AUTH = "Var god godkänn denna app för att du ska kunna spara och dela den.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Ändra värde:";
Blockly.Msg.CHAT = "Chatta med din medarbetare genom att skriva i detta fält.";
Blockly.Msg.CLEAN_UP = "Rada upp block";
Blockly.Msg.COLLAPSE_ALL = "Fäll ihop block";
Blockly.Msg.COLLAPSE_BLOCK = "Fäll ihop block";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "färg 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "färg 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "förhållande";
Blockly.Msg.COLOUR_BLEND_TITLE = "blanda";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blandar ihop två färger med ett bestämt förhållande (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://sv.wikipedia.org/wiki/Färg";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Välj en färg från paletten.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "slumpfärg";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Slumpa fram en färg.";
Blockly.Msg.COLOUR_RGB_BLUE = "blå";
Blockly.Msg.COLOUR_RGB_GREEN = "grön";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "röd";
Blockly.Msg.COLOUR_RGB_TITLE = "färg med";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Skapa en färg med det angivna mängden röd, grön och blå. Alla värden måste vara mellan 0 och 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "bryt ut ur loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "fortsätta med nästa upprepning av loop";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Bryta ut ur den innehållande upprepningen.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Hoppa över resten av denna loop och fortsätt med nästa loop.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Varning: Detta block kan endast användas i en loop.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "för varje föremål %1 i listan %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "För varje objekt i en lista, ange variabeln '%1' till objektet, och utför sedan några kommandon.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "räkna med %1 från %2 till %3 med %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Låt variabeln \"%1\" ta värden från starttalet till sluttalet, beräknat med det angivna intervallet, och utför de angivna blocken.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Lägg till ett villkor blocket \"om\".";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Lägg till ett sista villkor som täcker alla alternativ som är kvar för \"if\"-blocket.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Lägg till, ta bort eller ändra ordningen för sektioner för att omkonfigurera blocket \"om\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "annars";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "annars om";
Blockly.Msg.CONTROLS_IF_MSG_IF = "om";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Om ett värde är sant, utför några kommandon.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Om värdet är sant, utför det första kommandoblocket. Annars utför det andra kommandoblocket.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Om det första värdet är sant, utför det första kommandoblocket. Annars, om det andra värdet är sant, utför det andra kommandoblocket.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Om det första värdet är sant, utför det första kommandoblocket. Annars, om det andra värdet är sant, utför det andra kommandoblocket. Om ingen av värdena är sanna, utför det sista kommandoblocket.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "utför";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "upprepa %1 gånger";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Utför några kommandon flera gånger.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "upprepa tills";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "upprepa medan";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Medan ett värde är falskt, utför några kommandon.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Medan ett värde är sant, utför några kommandon.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Radera alla %1 block?";
Blockly.Msg.DELETE_BLOCK = "Radera block";
Blockly.Msg.DELETE_X_BLOCKS = "Radera %1 block";
Blockly.Msg.DISABLE_BLOCK = "Inaktivera block";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicera";
Blockly.Msg.ENABLE_BLOCK = "Aktivera block";
Blockly.Msg.EXPAND_ALL = "Fäll ut block";
Blockly.Msg.EXPAND_BLOCK = "Fäll ut block";
Blockly.Msg.EXTERNAL_INPUTS = "Externa inmatningar";
Blockly.Msg.HELP = "Hjälp";
Blockly.Msg.INLINE_INPUTS = "Radinmatning";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "skapa tom lista";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Ger tillbaka en lista utan någon data, alltså med längden 0";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Lägg till, ta bort eller ändra ordningen på objekten för att göra om det här \"list\"-blocket.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "skapa lista med";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Lägg till ett föremål till listan.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Skapa en lista med valfritt antal föremål.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "första";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# från slutet";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "hämta";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "hämta och ta bort";
Blockly.Msg.LISTS_GET_INDEX_LAST = "sista";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "slumpad";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "ta bort";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returnerar det första objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Ger tillbaka objektet på den efterfrågade positionen i en lista. #1 är det sista objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Ger tillbaka objektet på den efterfrågade positionen i en lista. #1 är det första objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returnerar det sista objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Returnerar ett slumpmässigt objekt i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Tar bort och återställer det första objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Tar bort och återställer objektet på den specificerade positionen i en lista. #1 är det sista objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Tar bort och återställer objektet på den specificerade positionen i en lista. #1 är det första objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Tar bort och återställer det sista objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Tar bort och återställer ett slumpmässigt objekt i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Tar bort det första objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Tar bort objektet på den efterfrågade positionen i en lista. #1 är det sista objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Tar bort objektet på den specificerade positionen i en lista. #1 är det första objektet.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Tar bort det sista objektet i en lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Tar bort en slumpmässig post i en lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "till # från slutet";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "till #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "till sista";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "få underlista från första";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "få underlista från # från slutet";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "få underlista från #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Skapar en kopia av den specificerade delen av en lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "hitta första förekomsten av objektet";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "hitta sista förekomsten av objektet";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Ger tillbaka den första/sista förekomsten av objektet i listan. Ger tillbaka 0 om objektet inte hittas.";
Blockly.Msg.LISTS_INLIST = "i listan";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 är tom";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Returnerar sant om listan är tom.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "längden på %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Returnerar längden på en lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "skapa lista med föremålet %1 upprepat %2 gånger";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Skapar en lista som innehåller ett valt värde upprepat ett bestämt antalet gånger.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "som";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "Sätt in vid";
Blockly.Msg.LISTS_SET_INDEX_SET = "ange";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "sätter in objektet i början av en lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "sätter in objektet vid en specificerad position i en lista. #1 är det sista objektet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Sätter in objektet vid en specificerad position i en lista. #1 är det första objektet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Lägg till objektet i slutet av en lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "sätter in objektet på en slumpad position i en lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Anger det första objektet i en lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sätter in objektet vid en specificerad position i en lista. #1 är det sista objektet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sätter in objektet vid en specificerad position i en lista. #1 är det första objektet.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Anger det sista elementet i en lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sätter in ett slumpat objekt i en lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "stigande";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "fallande";
Blockly.Msg.LISTS_SORT_TITLE = "sortera %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sortera en kopia av en lista.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabetiskt, ignorera skiftläge";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeriskt";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabetiskt";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "skapa lista från text";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "skapa text från lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Sammanfoga en textlista till en text, som separeras av en avgränsare.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dela upp text till en textlista och bryt vid varje avgränsare.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "med avgränsare";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falskt";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returnerar antingen sant eller falskt.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "sant";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://sv.wikipedia.org/wiki/Olikhet";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Ger tillbaka sant om båda värdena är lika med varandra.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Ger tillbaka sant om det första värdet är större än det andra.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Ger tillbaka sant om det första värdet är större än eller lika med det andra.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Ger tillbaka sant om det första värdet är mindre än det andra.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Ger tillbaka sant om det första värdet är mindre än eller lika med det andra.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Ger tillbaka sant om båda värdena inte är lika med varandra.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "inte %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Ger tillbaka sant om inmatningen är falsk. Ger tillbaka falskt och inmatningen är sann.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://sv.wikipedia.org/wiki/Null";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Returnerar null.";
Blockly.Msg.LOGIC_OPERATION_AND = "och";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "eller";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Ger tillbaka sant om båda värdena är sanna.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Ger tillbaka sant om minst ett av värdena är sant.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "om falskt";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "om sant";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Kontrollera villkoret i \"test\". Om villkoret är sant, ge tillbaka \"om sant\"-värdet; annars ge tillbaka \"om falskt\"-värdet.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://sv.wikipedia.org/wiki/Aritmetik";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Returnerar summan av de två talen.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Returnerar kvoten av de två talen.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Returnerar differensen mellan de två talen.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Returnerar produkten av de två talen.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Ger tillbaka det första talet upphöjt till det andra talet.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "ändra %1 med %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Lägg till ett tal till variabeln '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://sv.wikipedia.org/wiki/Matematisk_konstant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Returnerar en av de vanliga konstanterna: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) eller ∞ (oändligt).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begränsa %1 till mellan %2 och %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begränsa ett tal till att mellan de angivna gränsvärden (inkluderande).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "är delbart med";
Blockly.Msg.MATH_IS_EVEN = "är jämnt";
Blockly.Msg.MATH_IS_NEGATIVE = "är negativt";
Blockly.Msg.MATH_IS_ODD = "är ojämnt";
Blockly.Msg.MATH_IS_POSITIVE = "är positivt";
Blockly.Msg.MATH_IS_PRIME = "är ett primtal";
Blockly.Msg.MATH_IS_TOOLTIP = "Kontrollera om ett tal är jämnt, ojämnt, helt, positivt, negativt eller det är delbart med ett bestämt tal. Returnerar med sant eller falskt.";
Blockly.Msg.MATH_IS_WHOLE = "är helt";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resten av %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Returnerar kvoten från divisionen av de två talen.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";
Blockly.Msg.MATH_NUMBER_HELPURL = "https://sv.wikipedia.org/wiki/Tal";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Ett tal.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "medelvärdet av listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "högsta talet i listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medianen av listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minsta talet i listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "typvärdet i listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "slumpmässigt objekt i listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standardavvikelsen i listan";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "summan av listan";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Ger tillbaka medelvärdet (aritmetiskt) av de numeriska värdena i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Ger tillbaka det största talet i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Returnerar medianen av talen i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Ger tillbaka det minsta talet i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Ger tillbaka en lista med de(t) vanligaste objekte(t/n) i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Returnerar ett slumpmässigt element från listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Ger tillbaka standardavvikelsen i listan.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Ger tillbaka summan av alla talen i listan.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://sv.wikipedia.org/wiki/Slumptalsgenerator";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "slumpat decimaltal";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Ger tillbaka ett slumpat decimaltal mellan 0.0 (inkluderat) och 1.0 (exkluderat).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://sv.wikipedia.org/wiki/Slumptalsgenerator";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "slumpartat heltal från %1 till %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Ger tillbaka ett slumpat heltal mellan två värden, inkluderande.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://sv.wikipedia.org/wiki/Avrundning";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "avrunda";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "avrunda nedåt";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "avrunda uppåt";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Avrunda ett tal uppåt eller nedåt.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://sv.wikipedia.org/wiki/Kvadratrot";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolut";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "kvadratrot";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Returnerar absolutvärdet av ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Ger tillbaka e upphöjt i ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Returnera den naturliga logaritmen av ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Returnerar logaritmen för bas 10 av ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Returnerar negationen av ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Ger tillbaka 10 upphöjt i ett tal.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Returnerar kvadratroten av ett tal.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";
Blockly.Msg.MATH_TRIG_ACOS = "arccos";
Blockly.Msg.MATH_TRIG_ASIN = "arcsin";
Blockly.Msg.MATH_TRIG_ATAN = "arctan";
Blockly.Msg.MATH_TRIG_COS = "cos";
Blockly.Msg.MATH_TRIG_HELPURL = "https://sv.wikipedia.org/wiki/Trigonometrisk_funktion";
Blockly.Msg.MATH_TRIG_SIN = "sin";
Blockly.Msg.MATH_TRIG_TAN = "tan";
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Ger tillbaka arcus cosinus (arccos) för ett tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Ger tillbaka arcus sinus (arcsin) för ett tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Ger tillbaka arcus tangens (arctan) av ett tal.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Ger tillbaka cosinus för en grad (inte radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Ger tillbaka sinus för en grad (inte radian).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Ger tillbaka tangens för en grad (inte radian).";
Blockly.Msg.ME = "Jag";
Blockly.Msg.NEW_VARIABLE = "Ny variabel...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nytt variabelnamn:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "tillåta uttalanden";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://sv.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Kör den användardefinierade funktionen \"%1\".";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://sv.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Kör den användardefinierade funktionen \"%1\" och använd resultatet av den.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "med:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Skapa '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Beskriv denna funktion...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://sv.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "göra något";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "för att";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Skapar en funktion utan output.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://sv.wikipedia.org/wiki/Funktion_%28programmering%29";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "returnera";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Skapar en funktion med output.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Varning: Denna funktion har dubbla parametrar.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Markera funktionsdefinition";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Om ett värde är sant returneras ett andra värde.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Varning: Detta block får användas endast i en funktionsdefinition.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "inmatningsnamn:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Lägg till en inmatning till funktionen.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "inmatningar";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Lägg till, ta bort och ändra ordningen för inmatningar till denna funktion.";
Blockly.Msg.REDO = "Gör om";
Blockly.Msg.REMOVE_COMMENT = "Radera kommentar";
Blockly.Msg.RENAME_VARIABLE = "Byt namn på variabel...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Byt namn på alla'%1'-variabler till:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "lägg till text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "till";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Lägg till lite text till variabeln '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "till gemener";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "till Versala Initialer";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "till VERSALER";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Returnerar en kopia av texten i ett annat skiftläge.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hämta första bokstaven";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hämta bokstaven # från slutet";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hämta bokstaven #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "i texten";
Blockly.Msg.TEXT_CHARAT_LAST = "hämta sista bokstaven";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hämta slumpad bokstav";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Ger tillbaka bokstaven på den specificerade positionen.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Lägg till ett föremål till texten.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "sammanfoga";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Lägg till, ta bort eller ändra ordningen för sektioner för att omkonfigurera detta textblock.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "till bokstav # från slutet";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "till bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "till sista bokstaven";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "i texten";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "få textdel från första bokstaven";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "få textdel från bokstav # från slutet";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "få textdel från bokstav #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Ger tillbaka en viss del av texten.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "i texten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "hitta första förekomsten av texten";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "hitta sista förekomsten av texten";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Ger tillbaka indexet för den första/sista förekomsten av första texten i den andra texten.  Ger tillbaka 0 om texten inte hittas.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 är tom";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Returnerar sant om den angivna texten är tom.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "skapa text med";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Skapa en textbit genom att sammanfoga ett valfritt antal föremål.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "längden på %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Ger tillbaka antalet bokstäver (inklusive mellanslag) i den angivna texten.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "skriv %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Skriv den angivna texten, talet eller annat värde.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Fråga användaren efter ett tal.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Fråga användaren efter lite text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "fråga efter ett tal med meddelande";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "fråga efter text med meddelande";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://sv.wikipedia.org/wiki/Str%C3%A4ng_%28data%29";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En bokstav, ord eller textrad.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "ta bort mellanrum från båda sidorna av";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "ta bort mellanrum från vänstra sidan av";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "ta bort mellanrum från högra sidan av";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Returnerar en kopia av texten med borttagna mellanrum från en eller båda ändar.";
Blockly.Msg.TODAY = "Idag";
Blockly.Msg.UNDO = "Ångra";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "föremål";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Skapa \"välj %1\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returnerar värdet av denna variabel.";
Blockly.Msg.VARIABLES_SET = "välj %1 till %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Skapa 'hämta %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Gör så att den här variabeln blir lika med inputen.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LOGIC_OPERATION_NOT = "not";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_NOT = "If a condition is true then Logical NOT operator will make false.";
Blockly.Msg.BITWISE_OPERATION_AND = '&';
Blockly.Msg.BITWISE_OPERATION_OR = '|';
Blockly.Msg.BITWISE_OPERATION_XOR = '^';
Blockly.Msg.BITWISE_OPERATION_NOT = '~';
Blockly.Msg.BITWISE_OPERATION_SHIFTLEFT = '<<';
Blockly.Msg.BITWISE_OPERATION_SHIFTRIGHT = '>>';
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_AND = "Binary AND Operator copies a bit to the result if it exists in both operands.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_OR = "Binary OR Operator copies a bit if it exists in either operand";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_XOR = "Binary XOR Operator copies the bit if it is set in one operand but not both.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_NOT = "Binary Ones Complement Operator is unary and has the effect of flipping bits.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTLEFT = "The left operands value is moved left by the number of bits specified by the right operand.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTRIGHT = "The left operands value is moved right by the number of bits specified by the right operand.";

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "Read analog pin#";
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";
Blockly.Msg.ARD_ANALOGWRITE = "Set analog pin#";
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";
Blockly.Msg.ARD_BUILTIN_LED = "Set built-in LED";
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";
Blockly.Msg.ARD_DEFINE = "Define";
Blockly.Msg.ARD_DIGITALREAD = "Read digital pin#";
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";
Blockly.Msg.ARD_DIGITALREAD_PULLUP = "Read digital with PULL_UP mode Pin#";
Blockly.Msg.ARD_DIGITALREAD_PULLUP_TIP = "Read digital value on a pin using built-in resistor: HIGH or LOW";
Blockly.Msg.ARD_DIGITALWRITE = "Set digital pin#";
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";
Blockly.Msg.ARD_MKPAD_SETUP = 'Setup 4x4 Membrane Keypad (mkpad4x4) with';
Blockly.Msg.ARD_MKPAD_ROW1 = 'row 1 pin#';
Blockly.Msg.ARD_MKPAD_ROW2 = 'row 2 pin#';
Blockly.Msg.ARD_MKPAD_ROW3 = 'row 3 pin#';
Blockly.Msg.ARD_MKPAD_ROW4 = 'row 4 pin#';
Blockly.Msg.ARD_MKPAD_COL1 = 'col 1 pin#';
Blockly.Msg.ARD_MKPAD_COL2 = 'col 2 pin#';
Blockly.Msg.ARD_MKPAD_COL3 = 'col 3 pin#';
Blockly.Msg.ARD_MKPAD_COL4 = 'col 4 pin#';
Blockly.Msg.ARD_MKPAD_SETUP_TIP = 'Setup 4x4 Membrane Keypad with selected pins for 4x4 Matrix';
Blockly.Msg.ARD_MKPAD_GETKEY = 'Receive key from mkpad4x4 on row 1 pin#';
Blockly.Msg.ARD_MKPAD_GETKEY_TIP = 'Receives key pressed on a 4x4 Membrane Keypad';
Blockly.Msg.ARD_IRRECV_SETUP = 'Setup IR Remote Control with Pin#';
Blockly.Msg.ARD_IRRECV_SETUP_TIP = 'Setup of Infrared Receiver Module KY-022';
Blockly.Msg.ARD_IRRECV_READ = 'Read Value from IR Remote Control on Pin#';
Blockly.Msg.ARD_IRRECV_READ_AS = ' as variable ';
Blockly.Msg.ARD_IRRECV_DEFAULT_NAME = 'Button#';
Blockly.Msg.ARD_IRRECV_READ_TIP = 'Receives Value of KY-022 Infrared Receiver Module as string';
Blockly.Msg.ARD_RC522_SETUP = 'Setup RFID with RST Pin#';
Blockly.Msg.ARD_RC522_SETUP_SS = 'and SS Pin#';
Blockly.Msg.ARD_RC522_SETUP_TIP = 'Setup of RFID RC522 Identity Scanner Module';
Blockly.Msg.ARD_RC522_GETUID = 'RFID RC522 >> Get UID';
Blockly.Msg.ARD_RC522_GETUID_TIP = 'Reads Identification # of card or dongle with RFID RC522 Identity Scanner Module';
Blockly.Msg.ARD_RC522_ADDUID = 'RFID RC522 >> Add new UID';
Blockly.Msg.ARD_RC522_ADDUID_AS = ' as ';
Blockly.Msg.ARD_RC522_ADDUID_TIP = 'Add UID to as string e.g. A1 B2 C3 D4';
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";
Blockly.Msg.ARD_HIGH = "HIGH";
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";
Blockly.Msg.ARD_LOW = "LOW";
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";
Blockly.Msg.ARD_SERIAL_BPS = "bps";
Blockly.Msg.ARD_SERIAL_PRINT = "print";
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "Add new line";
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";
Blockly.Msg.ARD_SR04_SETUP = 'Setup HC-SR04 with Echo Pin#';
Blockly.Msg.ARD_SR04_SETUP_AND = 'and Trigger Pin#';
Blockly.Msg.ARD_SR04_SETUP_TIP = 'Setup HC-SR04 Sensor';
Blockly.Msg.ARD_SR04_READ = 'Read HC-SR04 from Echo PIN#';
Blockly.Msg.ARD_SR04_READ_TIP = 'Read Distance using HC-SR04 module';
Blockly.Msg.ARD_DHT11_SETUP = 'Setup DHT11 Sensor with Pin#';
Blockly.Msg.ARD_DHT11_SETUP_TIP = 'Setup of DHT11 Temperatur and Humidity Sensor';
Blockly.Msg.ARD_DHT11_READT = 'Read Temperature with DHT11 from PIN#';
Blockly.Msg.ARD_DHT11_READT_TIP = 'Measures Temperatur using DHT11 Sensor';
Blockly.Msg.ARD_DHT11_READH = 'Read Humidity with DHT11 from PIN#';
Blockly.Msg.ARD_DHT11_READH_TIP = 'Measures Humidity using DHT11 Sensor';
Blockly.Msg.ARD_GY521_SETUP = 'Setup GY-521 Gyroscope with A4(SDA) | A5(SCL) pins';
Blockly.Msg.ARD_GY521_SETUP_TIP = 'Setup to read Acceleration, Angles and Temperatur with GY-512 Sensor';
Blockly.Msg.ARD_GY521_ROT = 'GY-521 >> Measure angles on ';
Blockly.Msg.ARD_GY521_ROT_TIP = 'Measures angles of x, y and z axis in degrees with GY-512 Sensor';
Blockly.Msg.ARD_GY521_T = 'GY-521 >> Read Temperatur: ';
Blockly.Msg.ARD_GY521_T_TIP = 'Reads temperatur with GY-512 Sensor';
Blockly.Msg.ARD_GY521_X = 'X: ';
Blockly.Msg.ARD_GY521_Y = 'Y: ';
Blockly.Msg.ARD_GY521_Z = 'and Z: ';
Blockly.Msg.ARD_SERVO_WRITE = "Set SERVO from Pin";
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";
Blockly.Msg.ARD_SPI_SETUP = "Setup";
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";
Blockly.Msg.ARD_STEPPER_STEPS = "steps";
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";
Blockly.Msg.ARD_TIME_DELAY = "wait";
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";
Blockly.Msg.ARD_TIME_MS = "milliseconds";
Blockly.Msg.ARD_DS3231_SETUP = 'Setup Real-Time Clock on pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETUP_TIP = 'Setting up RTC Module (DS3231) on pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETCLOCK = 'Set Clock of RTC (DS3231) manually';
Blockly.Msg.ARD_DS3231_SETDATE = 'with Date: ';
Blockly.Msg.ARD_DS3231_SETTIME = 'and Time: ';
Blockly.Msg.ARD_DS3231_SETCLOCK_TIP = 'ONLY CHECK IT, IF YOU WANT TO MANUALLY SET DATE AND TIME ON RESTART';
Blockly.Msg.ARD_DS3231_READ = 'Read Date and Time from RTC Module';
Blockly.Msg.ARD_DS3231_READYEAR = 'Year: ';
Blockly.Msg.ARD_DS3231_READMONTH = 'Month: ';
Blockly.Msg.ARD_DS3231_READDAY = 'Day: ';
Blockly.Msg.ARD_DS3231_READHOUR = 'Hour: ';
Blockly.Msg.ARD_DS3231_READMINUTE = 'Minute: ';
Blockly.Msg.ARD_DS3231_READSECOND = 'Second: ';
Blockly.Msg.ARD_DS3231_READ_TIP = 'Receives Date and Time as variable for each entity';
Blockly.Msg.ARD_TONEFREQ = "at frequency";
Blockly.Msg.ARD_TONE_FREQ = "frequency";
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";
Blockly.Msg.ARD_MAP = 'Map %1 fromLow %2 fromHigh %3 toLow %4 toHigh %5';
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from one range to another.";
Blockly.Msg.ARD_MAX7219_SETUP_DIN = 'Setup MAX7219 on DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CS = ', CS Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CLK = ' and CLK Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_TIP = 'Setup MAX7219 8x8 LED Matrix module';
Blockly.Msg.ARD_MAX7219_SETCHAR = 'Set Character MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETCHAR_TIP = 'Create Character for MAX7219 on DIN Pin';
Blockly.Msg.ARD_MAX7219_CLR = 'Clear Display MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_CLR_TIP = 'Clears Display of MAX7219 on DIN Pin';
Blockly.Msg.ARD_LCD1602_SETUP = 'Setup LCD 16x2 on digital pins';
Blockly.Msg.ARD_LCD1602_SETUP_PINS = '>>RS:7 >>E:8 >>DB4:';
Blockly.Msg.ARD_LCD1602_SETUP_DB5 = '>>DB5:';
Blockly.Msg.ARD_LCD1602_SETUP_DB6 = '>>DB6:';
Blockly.Msg.ARD_LCD1602_SETUP_DB7 = '>>DB7:';
Blockly.Msg.ARD_LCD1602_SETUP_TIP = 'Setup LCD 16x2 on digital pins\n RS(7), E(8), DB4, DB5, DB6, and DB7';
Blockly.Msg.ARD_LCD1602_WRITE = 'LCD 16x2 >> Write to display ';
Blockly.Msg.ARD_LCD1602_LINE1 = '1st Line: ';
Blockly.Msg.ARD_LCD1602_LINE2 = '2nd Line: ';
Blockly.Msg.ARD_LCD1602_WRITE_TIP = 'Write lines of text to display';
Blockly.Msg.ARD_LCD1602_CLR = 'Clear LCD 16x2 Display';
Blockly.Msg.ARD_LCD1602_CLR_TIP = 'Clears Display of LCD 16x2';
Blockly.Msg.ARD_SEVSEG = 'Setup 7 Segment Display via 74HC595';
Blockly.Msg.ARD_SEVSEG_TIP = 'Sets table of 10 digits for 7 Segment Display that is connected via shiftregister 74HC595';
Blockly.Msg.ARD_SEVSEG_WRITE = '7 Segment Display >> Write Digit ';
Blockly.Msg.ARD_SEVSEG_WRITE_TIP = 'Writes digit 0...9 to 7 Segment Display that is connected via shiftregister 74HC595';
Blockly.Msg.ARD_FOURSEVSEG = 'Setup 4 x 7 Segment Display to pin# ';
Blockly.Msg.ARD_FOURSEVSEG_SEGA = 'A:';
Blockly.Msg.ARD_FOURSEVSEG_SEGB = 'B:';
Blockly.Msg.ARD_FOURSEVSEG_SEGC = 'C:';
Blockly.Msg.ARD_FOURSEVSEG_SEGD = 'D:';
Blockly.Msg.ARD_FOURSEVSEG_SEGE = 'E:';
Blockly.Msg.ARD_FOURSEVSEG_SEGF = 'F:';
Blockly.Msg.ARD_FOURSEVSEG_SEGG = 'G:';
Blockly.Msg.ARD_FOURSEVSEG_SEGDP = 'DP:';
Blockly.Msg.ARD_FOURSEVSEG_DIG1 = 'D1:';
Blockly.Msg.ARD_FOURSEVSEG_DIG2 = 'D2:';
Blockly.Msg.ARD_FOURSEVSEG_DIG3 = 'D3:';
Blockly.Msg.ARD_FOURSEVSEG_DIG4 = 'D4:';
Blockly.Msg.ARD_FOURSEVSEG_TIP = 'Sets table of 10 digits for 4 Digit 7 Segment Display directly via pins to each segment and digit';
Blockly.Msg.ARD_FOURSEVSEG_WRITE = '4 x 7 Segment Display >> Write Digit / Char ';
Blockly.Msg.ARD_FOURSEVSEG_WRITE_TIP = 'Writes digit 0...9 or dot to 4 digit 7 Segment Display';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR = '4 x 7 Segment Display >> Create Char ';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR_TIP = 'Creates a character for 4 x 7 Segment Display and that can be used via "Write Digit / Char';
Blockly.Msg.ARD_FOURSEVSEG_CLR = '4 x 7 Segment Display >> Clear Display';
Blockly.Msg.ARD_FOURSEVSEG_CLR_TIP = 'Clears and switches off 4 Digit 7 Segment Display';
Blockly.Msg.ARD_SHIFTOUT = 'shiftOut >> Data#';
Blockly.Msg.ARD_SHIFTOUT_C = 'Clk#';
Blockly.Msg.ARD_SHIFTOUT_O = 'Order';
Blockly.Msg.ARD_SHIFTOUT_B = 'byteVal';
Blockly.Msg.ARD_SHIFTOUT_TIP = 'Shifts out a byte of data one bit at a time shiftOut(). Order Left to Right, or Right to Left';
Blockly.Msg.ARD_BITSET_1 = 'Sets variable of';
Blockly.Msg.ARD_BITSET_2 = 'to bit';
Blockly.Msg.ARD_BITSET_TIP = 'bitSet() >> Sets (writes a 1 to) a bit of a numeric value)';
Blockly.Msg.ARD_ATTACHINTERRUPT = 'Attach on Interrupt Pin#';
Blockly.Msg.ARD_ATTACHINTERRUPT_FUNC = 'Function';
Blockly.Msg.ARD_ATTACHINTERRUPT_MODE = 'in Mode';
Blockly.Msg.ARD_ATTACHINTERRUPT_TIP = 'Useful for making things happen automatically in microcontroller programs, e.g. reading a rotary encoder, or monitoring user input';
Blockly.Msg.ARD_TYPE_ARRAY = "Array";
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";
Blockly.Msg.ARD_TYPE_CHAR = "Character";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";
Blockly.Msg.ARD_TYPE_DOUBLE = "Double";
Blockly.Msg.ARD_TYPE_LONG = "Large Number";
Blockly.Msg.ARD_TYPE_NULL = "Null";
Blockly.Msg.ARD_TYPE_NUMBER = "Number";
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";
Blockly.Msg.ARD_TYPE_TEXT = "Text";
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";
Blockly.Msg.ARD_VAR_AS = "as";
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";
Blockly.Msg.ARD_WRITE_TO = "to";
Blockly.Msg.NEW_INSTANCE = "New instance...";
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";
