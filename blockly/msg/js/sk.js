// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.sk');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Pridať komentár";
Blockly.Msg.AUTH = "Autorizujte prosím túto aplikáciu, aby ste mohli uložiť a zdieľať vašu prácu.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Zmeniť hodnotu:";
Blockly.Msg.CHAT = "Písaním do tohto políčka komunikujte so spolupracovníkmi!";
Blockly.Msg.CLEAN_UP = "Narovnať bloky";
Blockly.Msg.COLLAPSE_ALL = "Zvinúť bloky";
Blockly.Msg.COLLAPSE_BLOCK = "Zvinúť blok";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "farba 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "farba 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "pomer";
Blockly.Msg.COLOUR_BLEND_TITLE = "zmiešať";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Zmieša dve farby v danom pomere (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Zvoľte farbu z palety.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "náhodná farba";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Zvoliť farbu náhodne.";
Blockly.Msg.COLOUR_RGB_BLUE = "modrá";
Blockly.Msg.COLOUR_RGB_GREEN = "zelená";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "červená";
Blockly.Msg.COLOUR_RGB_TITLE = "ofarbiť s";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Vytvoriť farbu pomocou zadaného množstva červenej, zelenej a modrej. Množstvo musí byť medzi 0 a 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "opustiť slučku";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "prejdi na nasledujúce opakovanie slučky";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Opustiť túto slučku.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Vynechať zvyšok tejto slučky a pokračovať ďalším opakovaním.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Upozornenie: Tento blok sa môže používať len v rámci slučky.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pre každý prvok %1 v zozname %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pre každý prvok v zozname priraď jeho hodnotu do premenej '%1' a vykonaj príkazy.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "počítať s %1 od %2 do %3 o %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Nechá premennú '%1' nadobúdať hodnoty od začiatočného čísla po konečné s daným medzikrokom a vykoná zadané bloky.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Pridať podmienku k \"ak\" bloku.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Pridať poslednú záchytnú podmienku k \"ak\" bloku.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Pridať, odstrániť alebo zmeniť poradie oddielov tohto \"ak\" bloku.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "inak";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "inak ak";
Blockly.Msg.CONTROLS_IF_MSG_IF = "ak";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Ak je hodnota pravda, vykonaj príkazy.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Ak je hodnota pravda, vykonaj príkazy v prvom bloku. Inak vykonaj príkazy v druhom bloku.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Ak je prvá hodnota pravda, vykonaj príkazy v prvom bloku. Inak, ak je druhá hodnota pravda, vykonaj príkazy v druhom bloku.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Ak je prvá hodnota pravda, vykonaj príkazy v prvom bloku. Inak, ak je druhá hodnota pravda, vykonaj príkazy v druhom bloku. Ak ani jedna hodnota nie je pravda, vykonaj príkazy v poslednom bloku.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "rob";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "opakuj %1 krát";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Opakuj určité príkazy viackrát.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "opakuj kým nebude";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "opakuj kým";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Kým je hodnota nepravdivá, vykonávaj príkazy.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Kým je hodnota pravdivá, vykonávaj príkazy.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Zmazať všetkých %1 dielcov?";
Blockly.Msg.DELETE_BLOCK = "Odstrániť blok";
Blockly.Msg.DELETE_X_BLOCKS = "Odstrániť %1 blokov";
Blockly.Msg.DISABLE_BLOCK = "Vypnúť blok";
Blockly.Msg.DUPLICATE_BLOCK = "Duplikovať";
Blockly.Msg.ENABLE_BLOCK = "Povoliť blok";
Blockly.Msg.EXPAND_ALL = "Rozvinúť bloky";
Blockly.Msg.EXPAND_BLOCK = "Rozvinúť blok";
Blockly.Msg.EXTERNAL_INPUTS = "Vonkajšie vstupy";
Blockly.Msg.HELP = "Pomoc";
Blockly.Msg.INLINE_INPUTS = "Riadkové vstupy";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "prázdny zoznam";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Vráti zoznam nulovej dĺžky, ktorý neobsahuje žiadne prvky.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "zoznam";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Pridaj, odstráň alebo zmeň poradie v tomto zoznamovom bloku.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "vytvor zoznam s";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Pridaj prvok do zoznamu.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Vytvor zoznam s ľubovoľným počtom prvkov.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "prvý";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# od konca";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "zisti";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "zisti a odstráň";
Blockly.Msg.LISTS_GET_INDEX_LAST = "posledný";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "náhodný";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "odstráň";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Vráti počiatočný prvok zoznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Vráti prvok na určenej pozícii v zozname. #1 je posledný prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Vráti prvok na určenej pozícii v zozname. #1 je počiatočný prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Vráti posledný prvok zoznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Vráti náhodný prvok zoznamu.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Odstráni a vráti prvý prvok v zozname.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Odstráni a vráti prvok z určenej pozície v zozname. #1 je posledný prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Odstráni a vráti prvok z určenej pozície v zozname. #1 je prvý prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Odstráni a vráti posledný prvok v zozname.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Odstráni a vráti náhodný prvok v zozname.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Odstráni prvý prvok v zozname.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Odstráni prvok na určenej pozícii v zozname. #1 je posledný prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Odstráni prvok na určenej pozícii v zozname. #1 je prvý prvok.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Odstráni posledný prvok v zozname.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Odstráni náhodný prvok v zozname.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "po # od konca";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "po #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "po koniec";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "Získať podzoznam od začiatku";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "Získať podzoznam od # od konca";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "získať podzoznam od #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Skopíruje určený úsek zoznamu.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "nájdi prvý výskyt prvku";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "nájdi posledný výskyt prvku";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Vráti index prvého/posledného výskytu prvku v zozname. Ak sa nič nenašlo, vráti 0.";
Blockly.Msg.LISTS_INLIST = "v zozname";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 je prázdny";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Vráti pravda, ak je zoznam prázdny.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "dĺžka %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Vráti dĺžku zoznamu";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "vytvor zoznam s prvkom %1 opakovaným %2 krát";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Vytvorí zoznam s niekoľkými rovnakými prvkami s danou hodnotou.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "ako";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "vložiť na";
Blockly.Msg.LISTS_SET_INDEX_SET = "nastaviť";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Vsunie prvok na začiatok zoznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Vsunie prvok na určenú pozíciu v zozname. #1 je posledný prvok.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Vsunie prvok na určenú pozíciu v zozname. #1 je prvý prvok.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Pripojí prvok na koniec zoznamu.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Vsunie prvok na náhodné miesto v zozname.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Nastaví prvý prvok v zozname.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Nastaví prvok na určenej pozícii v zozname. #1 je posledný prvok.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Nastaví prvok na určenej pozícii v zozname. #1 je prvý prvok.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Nastaví posledný prvok v zozname.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Nastaví posledný prvok v zozname.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "vytvoriť zoznam z textu";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "vytvoriť text zo zoznamu";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Spojiť zoznam textov do jedného textu s oddeľovačmi.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Rozdelenie textu do zoznamu textov, lámanie na oddeľovačoch.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "s oddeľovačom";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "nepravda";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Vráť buď hodnotu pravda alebo nepravda.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "pravda";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Vráť hodnotu pravda, ak sú vstupy rovnaké.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Vráť hodnotu pravda ak prvý vstup je väčší než druhý.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Vráť hodnotu pravda ak prvý vstup je väčší alebo rovný druhému.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Vráť hodnotu pravda, ak prvý vstup je menší než druhý.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Vráť hodnotu pravda ak prvý vstup je menší alebo rovný druhému.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Vráť hodnotu pravda, ak vstupy nie sú rovnaké.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "nie je %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Vráti hodnotu pravda, ak je vstup nepravda. Vráti hodnotu nepravda ak je vstup pravda.";
Blockly.Msg.LOGIC_NULL = "nič";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Vráti hodnotu nula.";
Blockly.Msg.LOGIC_OPERATION_AND = "a";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "alebo";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Vráť hodnotu pravda, ak sú vstupy pravdivé.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Vráť hodnotu pravda, ak je aspoň jeden vstup pravda.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "ak nepravda";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "ak pravda";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Skontroluj podmienku testom. Ak je podmienka pravda, vráť hodnotu \"ak pravda\", inak vráť hodnotu \"ak nepravda\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Vráť súčet dvoch čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Vráť podiel dvoch čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Vráť rozdiel dvoch čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Vráť súčin dvoch čísel.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Vráť prvé číslo umocnené druhým.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "zmeniť %1 o %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Pridaj číslo do premennej \"%1\".";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant‎";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Vráť jednu zo zvyčajných konštánt: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), alebo ∞ (nekonečno).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "obmedz %1 od %2 do %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Obmedzí číslo do zadaných hraníc (vrátane).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "je deliteľné";
Blockly.Msg.MATH_IS_EVEN = "je párne";
Blockly.Msg.MATH_IS_NEGATIVE = "je záporné";
Blockly.Msg.MATH_IS_ODD = "je nepárne";
Blockly.Msg.MATH_IS_POSITIVE = "je kladné";
Blockly.Msg.MATH_IS_PRIME = "je prvočíslo";
Blockly.Msg.MATH_IS_TOOLTIP = "Skontroluj či je číslo párne, nepárne, celé, kladné, záporné alebo deliteľné určitým číslom. Vráť hodnotu pravda alebo nepravda.";
Blockly.Msg.MATH_IS_WHOLE = "je celé číslo";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "zvyšok po delení %1 + %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Vráť zvyšok po delení jedného čísla druhým.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Číslo.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "priemer zoznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "najväčšie v zozname";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "medián zoznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "najmenšie v zozname";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "najčastejšie v zozname";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "náhodný prvok zoznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "smerodajná odchýlka zoznamu";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "súčet zoznamu";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Vráť aritmetický priemer čísel v zozname.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Vrátiť najväčšie číslo v zozname.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Vráť medián čísel v zozname.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Vrátiť najmenšie číslo v zozname.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Vrátiť najčastejší prvok v zozname.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Vráť náhodne zvolený prvok zoznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Vráť smeroddajnú odchýlku zoznamu.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Vráť súčet všetkých čísel v zozname.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "náhodné číslo od 0 do 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Vráť náhodné číslo z intervalu 0.0 (vrátane) až 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "náhodné celé číslo od %1 do %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Vráť náhodné celé číslo z určeného intervalu (vrátane).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "zaokrúhli";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "zaokrúhli nadol";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "zaokrúhli nahor";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Zaokrúhli číslo nahor alebo nadol.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absolútna hodnota";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "druhá odmocnina";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Vráť absolútnu hodnotu čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Vráť e umocnené číslom.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Vráť prirodzený logaritmus čísla.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Vráť logaritmus čísla so základom 10.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Vráť opačné číslo.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Vráť 10 umocnené číslom.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Vráť druhú odmocninu čísla.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "arccos";
Blockly.Msg.MATH_TRIG_ASIN = "arcsin";
Blockly.Msg.MATH_TRIG_ATAN = "arctan";
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Vráť arkus kosínus čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Vráť arkus sínus čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Vráť arkus tangens čísla.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Vráť kosínus uhla (v stupňoch).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Vráť sínus uhla (v stupňoch).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Vráť tangens uhla (v stupňoch).";
Blockly.Msg.ME = "Ja";
Blockly.Msg.NEW_VARIABLE = "Nová premenná...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Názov novej premennej:";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "povoliť príkazy";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "s:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Spustí používateľom definovanú funkciu '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Spustí používateľom definovanú funkciu '%1' a použije jej výstup.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "s:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Vytvoriť '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Doplň, čo robí táto funkcia...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "urob niečo";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "na";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Vytvorí funciu bez výstupu.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "vrátiť";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Vytvorí funkciu s výstupom.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Upozornenie: Táto funkcia má duplicitné parametre.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Zvýrazniť definíciu funkcie";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Ak je hodnota pravda, tak vráti druhú hodnotu.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Upozornenie: Tento blok môže byť len vo vnútri funkcie.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "názov vstupu:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Pridať vstup do funkcie.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "vstupy";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Pridať, odstrániť alebo zmeniť poradie vstupov tejto funkcie.";
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Odstrániť komentár";
Blockly.Msg.RENAME_VARIABLE = "Premenovať premennú...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Premenovať všetky premenné '%1' na:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "pridaj text";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "do";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Pridaj určitý text do premennej '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "na malé písmená";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "na Veľké Začiatočné Písmená";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "na VEĽKÉ PÍSMENÁ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Vráť kópiu textu s inou veľkosťou písmen.";
Blockly.Msg.TEXT_CHARAT_FIRST = "zisti prvé písmeno";
Blockly.Msg.TEXT_CHARAT_FROM_END = "zisti # písmeno od konca";
Blockly.Msg.TEXT_CHARAT_FROM_START = "zisti písmeno #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "v texte";
Blockly.Msg.TEXT_CHARAT_LAST = "zisti posledné písmeno";
Blockly.Msg.TEXT_CHARAT_RANDOM = "vyber náhodné písmeno";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Vráti písmeno na určenej pozícii.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Pridaj prvok do textu.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "spoj";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Pridaj, odstráň alebo zmeň poradie oddielov v tomto textovom bloku.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "po # písmeno od konca";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "po písmeno #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "po koniec";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "v texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "vyber podreťazec od začiatku";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "vyber podreťazec od # písmena od konca";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "vyber podreťazec od písmena #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Vráti určenú časť textu.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "v texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "nájdi prvý výskyt textu";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "nájdi posledný výskyt textu";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Vráti index prvého/posledného výskytu prvého textu v druhom texte. Ak nenájde, vráti 0.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 je prázdny";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Vráti hodnotu pravda, ak zadaný text je prázdny.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "vytvor text z";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Vytvor text spojením určitého počtu prvkov.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "dĺžka %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Vráti počet písmen (s medzerami) v zadanom texte.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "píš %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Napíš zadaný text, číslo alebo hodnotu.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Výzva pre používateľa na zadanie čísla.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Výzva pre používateľa na zadanie textu.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "výzva na zadanie čísla so správou";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "výzva za zadanie textu so správou";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Písmeno, slovo alebo riadok textu.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "odstráň medzery z oboch strán";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "odstráň medzery z ľavej strany";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "odstráň medzery z pravej strany";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Vráť kópiu textu bez medzier na jednom alebo oboch koncoch.";
Blockly.Msg.TODAY = "Dnes";
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "prvok";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Vytvoriť \"nastaviť %1\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Vráti hodnotu tejto premennej.";
Blockly.Msg.VARIABLES_SET = "nastaviť %1 na %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Vytvoriť \"získať %1\"";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Nastaví túto premennú, aby sa rovnala vstupu.";
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LOGIC_OPERATION_NOT = "not";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_NOT = "If a condition is true then Logical NOT operator will make false.";
Blockly.Msg.BITWISE_OPERATION_AND = '&';
Blockly.Msg.BITWISE_OPERATION_OR = '|';
Blockly.Msg.BITWISE_OPERATION_XOR = '^';
Blockly.Msg.BITWISE_OPERATION_NOT = '~';
Blockly.Msg.BITWISE_OPERATION_SHIFTLEFT = '<<';
Blockly.Msg.BITWISE_OPERATION_SHIFTRIGHT = '>>';
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_AND = "Binary AND Operator copies a bit to the result if it exists in both operands.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_OR = "Binary OR Operator copies a bit if it exists in either operand";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_XOR = "Binary XOR Operator copies the bit if it is set in one operand but not both.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_NOT = "Binary Ones Complement Operator is unary and has the effect of flipping bits.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTLEFT = "The left operands value is moved left by the number of bits specified by the right operand.";
Blockly.Msg.BITWISE_OPERATION_TOOLTIP_SHIFTRIGHT = "The left operands value is moved right by the number of bits specified by the right operand.";

// Ardublockly strings
Blockly.Msg.ARD_ANALOGREAD = "Read analog pin#";
Blockly.Msg.ARD_ANALOGREAD_TIP = "Return value between 0 and 1024";
Blockly.Msg.ARD_ANALOGWRITE = "Set analog pin#";
Blockly.Msg.ARD_ANALOGWRITE_TIP = "Write analog value between 0 and 255 to a specific PWM Port";
Blockly.Msg.ARD_BUILTIN_LED = "Set built-in LED";
Blockly.Msg.ARD_BUILTIN_LED_TIP = "Light on or off for the built-in LED of the Arduino";
Blockly.Msg.ARD_COMPONENT_WARN1 = "A %1 configuration block with the same %2 name must be added to use this block!";
Blockly.Msg.ARD_DEFINE = "Define";
Blockly.Msg.ARD_DIGITALREAD = "Read digital pin#";
Blockly.Msg.ARD_DIGITALREAD_TIP = "Read digital value on a pin: HIGH or LOW";
Blockly.Msg.ARD_DIGITALREAD_PULLUP = "Read digital with PULL_UP mode Pin#";
Blockly.Msg.ARD_DIGITALREAD_PULLUP_TIP = "Read digital value on a pin using built-in resistor: HIGH or LOW";
Blockly.Msg.ARD_DIGITALWRITE = "Set digital pin#";
Blockly.Msg.ARD_DIGITALWRITE_TIP = "Write digital value HIGH or LOW to a specific Port";
Blockly.Msg.ARD_MKPAD_SETUP = 'Setup 4x4 Membrane Keypad (mkpad4x4) with';
Blockly.Msg.ARD_MKPAD_ROW1 = 'row 1 pin#';
Blockly.Msg.ARD_MKPAD_ROW2 = 'row 2 pin#';
Blockly.Msg.ARD_MKPAD_ROW3 = 'row 3 pin#';
Blockly.Msg.ARD_MKPAD_ROW4 = 'row 4 pin#';
Blockly.Msg.ARD_MKPAD_COL1 = 'col 1 pin#';
Blockly.Msg.ARD_MKPAD_COL2 = 'col 2 pin#';
Blockly.Msg.ARD_MKPAD_COL3 = 'col 3 pin#';
Blockly.Msg.ARD_MKPAD_COL4 = 'col 4 pin#';
Blockly.Msg.ARD_MKPAD_SETUP_TIP = 'Setup 4x4 Membrane Keypad with selected pins for 4x4 Matrix';
Blockly.Msg.ARD_MKPAD_GETKEY = 'Receive key from mkpad4x4 on row 1 pin#';
Blockly.Msg.ARD_MKPAD_GETKEY_TIP = 'Receives key pressed on a 4x4 Membrane Keypad';
Blockly.Msg.ARD_IRRECV_SETUP = 'Setup IR Remote Control with Pin#';
Blockly.Msg.ARD_IRRECV_SETUP_TIP = 'Setup of Infrared Receiver Module KY-022';
Blockly.Msg.ARD_IRRECV_READ = 'Read Value from IR Remote Control on Pin#';
Blockly.Msg.ARD_IRRECV_READ_AS = ' as variable ';
Blockly.Msg.ARD_IRRECV_DEFAULT_NAME = 'Button#';
Blockly.Msg.ARD_IRRECV_READ_TIP = 'Receives Value of KY-022 Infrared Receiver Module as string';
Blockly.Msg.ARD_RC522_SETUP = 'Setup RFID with RST Pin#';
Blockly.Msg.ARD_RC522_SETUP_SS = 'and SS Pin#';
Blockly.Msg.ARD_RC522_SETUP_TIP = 'Setup of RFID RC522 Identity Scanner Module';
Blockly.Msg.ARD_RC522_GETUID = 'RFID RC522 >> Get UID';
Blockly.Msg.ARD_RC522_GETUID_TIP = 'Reads Identification # of card or dongle with RFID RC522 Identity Scanner Module';
Blockly.Msg.ARD_RC522_ADDUID = 'RFID RC522 >> Add new UID';
Blockly.Msg.ARD_RC522_ADDUID_AS = ' as ';
Blockly.Msg.ARD_RC522_ADDUID_TIP = 'Add UID to as string e.g. A1 B2 C3 D4';
Blockly.Msg.ARD_FUN_RUN_LOOP = "Arduino loop forever:";
Blockly.Msg.ARD_FUN_RUN_SETUP = "Arduino run first:";
Blockly.Msg.ARD_FUN_RUN_TIP = "Defines the Arduino setup() and loop() functions.";
Blockly.Msg.ARD_HIGH = "HIGH";
Blockly.Msg.ARD_HIGHLOW_TIP = "Set a pin state logic High or Low.";
Blockly.Msg.ARD_LOW = "LOW";
Blockly.Msg.ARD_NOTONE = "Turn off tone on pin #";
Blockly.Msg.ARD_NOTONE_PIN = "No tone PIN#";
Blockly.Msg.ARD_NOTONE_PIN_TIP = "Stop generating a tone on a pin";
Blockly.Msg.ARD_NOTONE_TIP = "Turns the tone off on the selected pin";
Blockly.Msg.ARD_PIN_WARN1 = "Pin %1 is needed for %2 as pin %3. Already used as %4.";
Blockly.Msg.ARD_PULSETIMEOUT_TIP = "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.";
Blockly.Msg.ARD_PULSE_READ = "measure %1 pulse on pin #%2";
Blockly.Msg.ARD_PULSE_READ_TIMEOUT = "measure %1 pulse on pin #%2 (timeout after %3 μs)";
Blockly.Msg.ARD_PULSE_TIP = "Measures the duration of a pulse on the selected pin.";
Blockly.Msg.ARD_SERIAL_BPS = "bps";
Blockly.Msg.ARD_SERIAL_PRINT = "print";
Blockly.Msg.ARD_SERIAL_PRINT_NEWLINE = "Add new line";
Blockly.Msg.ARD_SERIAL_PRINT_TIP = "Prints data to the console/serial port as human-readable ASCII text.";
Blockly.Msg.ARD_SERIAL_PRINT_WARN = "A setup block for %1 must be added to the workspace to use this block!";
Blockly.Msg.ARD_SERIAL_SETUP = "Setup";
Blockly.Msg.ARD_SERIAL_SETUP_TIP = "Selects the speed for a specific Serial peripheral";
Blockly.Msg.ARD_SERIAL_SPEED = ":  speed to";
Blockly.Msg.ARD_SERVO_READ = "read SERVO from PIN#";
Blockly.Msg.ARD_SERVO_READ_TIP = "Read a Servo angle";
Blockly.Msg.ARD_SR04_SETUP = 'Setup HC-SR04 with Echo Pin#';
Blockly.Msg.ARD_SR04_SETUP_AND = 'and Trigger Pin#';
Blockly.Msg.ARD_SR04_SETUP_TIP = 'Setup HC-SR04 Sensor';
Blockly.Msg.ARD_SR04_READ = 'Read HC-SR04 from Echo PIN#';
Blockly.Msg.ARD_SR04_READ_TIP = 'Read Distance using HC-SR04 module';
Blockly.Msg.ARD_DHT11_SETUP = 'Setup DHT11 Sensor with Pin#';
Blockly.Msg.ARD_DHT11_SETUP_TIP = 'Setup of DHT11 Temperatur and Humidity Sensor';
Blockly.Msg.ARD_DHT11_READT = 'Read Temperature with DHT11 from PIN#';
Blockly.Msg.ARD_DHT11_READT_TIP = 'Measures Temperatur using DHT11 Sensor';
Blockly.Msg.ARD_DHT11_READH = 'Read Humidity with DHT11 from PIN#';
Blockly.Msg.ARD_DHT11_READH_TIP = 'Measures Humidity using DHT11 Sensor';
Blockly.Msg.ARD_GY521_SETUP = 'Setup GY-521 Gyroscope with A4(SDA) | A5(SCL) pins';
Blockly.Msg.ARD_GY521_SETUP_TIP = 'Setup to read Acceleration, Angles and Temperatur with GY-512 Sensor';
Blockly.Msg.ARD_GY521_ROT = 'GY-521 >> Measure angles on ';
Blockly.Msg.ARD_GY521_ROT_TIP = 'Measures angles of x, y and z axis in degrees with GY-512 Sensor';
Blockly.Msg.ARD_GY521_T = 'GY-521 >> Read Temperatur: ';
Blockly.Msg.ARD_GY521_T_TIP = 'Reads temperatur with GY-512 Sensor';
Blockly.Msg.ARD_GY521_X = 'X: ';
Blockly.Msg.ARD_GY521_Y = 'Y: ';
Blockly.Msg.ARD_GY521_Z = 'and Z: ';
Blockly.Msg.ARD_SERVO_WRITE = "Set SERVO from Pin";
Blockly.Msg.ARD_SERVO_WRITE_DEG_180 = "Degrees (0~180)";
Blockly.Msg.ARD_SERVO_WRITE_TIP = "Set a Servo to an specified angle";
Blockly.Msg.ARD_SERVO_WRITE_TO = "to";
Blockly.Msg.ARD_SETTONE = "Set tone on pin #";
Blockly.Msg.ARD_SPI_SETUP = "Setup";
Blockly.Msg.ARD_SPI_SETUP_CONF = "configuration:";
Blockly.Msg.ARD_SPI_SETUP_DIVIDE = "clock divide";
Blockly.Msg.ARD_SPI_SETUP_LSBFIRST = "LSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_MODE = "SPI mode (idle - edge)";
Blockly.Msg.ARD_SPI_SETUP_MODE0 = "0 (Low - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE1 = "1 (Low - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MODE2 = "2 (High - Falling)";
Blockly.Msg.ARD_SPI_SETUP_MODE3 = "3 (High - Rising)";
Blockly.Msg.ARD_SPI_SETUP_MSBFIRST = "MSBFIRST";
Blockly.Msg.ARD_SPI_SETUP_SHIFT = "data shift";
Blockly.Msg.ARD_SPI_SETUP_TIP = "Configures the SPI peripheral.";
Blockly.Msg.ARD_SPI_TRANSRETURN_TIP = "Send a SPI message to an specified slave device and get data back.";
Blockly.Msg.ARD_SPI_TRANS_NONE = "none";
Blockly.Msg.ARD_SPI_TRANS_SLAVE = "to slave pin";
Blockly.Msg.ARD_SPI_TRANS_TIP = "Send a SPI message to an specified slave device.";
Blockly.Msg.ARD_SPI_TRANS_VAL = "transfer";
Blockly.Msg.ARD_SPI_TRANS_WARN1 = "A setup block for %1 must be added to the workspace to use this block!";
Blockly.Msg.ARD_SPI_TRANS_WARN2 = "Old pin value %1 is no longer available.";
Blockly.Msg.ARD_STEPPER_COMPONENT = "stepper";
Blockly.Msg.ARD_STEPPER_DEFAULT_NAME = "MyStepper";
Blockly.Msg.ARD_STEPPER_FOUR_PINS = "4";
Blockly.Msg.ARD_STEPPER_MOTOR = "stepper motor:";
Blockly.Msg.ARD_STEPPER_NUMBER_OF_PINS = "Number of pins";
Blockly.Msg.ARD_STEPPER_PIN1 = "pin1#";
Blockly.Msg.ARD_STEPPER_PIN2 = "pin2#";
Blockly.Msg.ARD_STEPPER_PIN3 = "pin3#";
Blockly.Msg.ARD_STEPPER_PIN4 = "pin4#";
Blockly.Msg.ARD_STEPPER_REVOLVS = "how many steps per revolution";
Blockly.Msg.ARD_STEPPER_SETUP = "Setup stepper motor";
Blockly.Msg.ARD_STEPPER_SETUP_TIP = "Configures a stepper motor pinout and other settings.";
Blockly.Msg.ARD_STEPPER_SPEED = "set speed (rpm) to";
Blockly.Msg.ARD_STEPPER_STEP = "move stepper";
Blockly.Msg.ARD_STEPPER_STEPS = "steps";
Blockly.Msg.ARD_STEPPER_STEP_TIP = "Turns the stepper motor a specific number of steps.";
Blockly.Msg.ARD_STEPPER_TWO_PINS = "2";
Blockly.Msg.ARD_TIME_DELAY = "wait";
Blockly.Msg.ARD_TIME_DELAY_MICROS = "microseconds";
Blockly.Msg.ARD_TIME_DELAY_MICRO_TIP = "Wait specific time in microseconds";
Blockly.Msg.ARD_TIME_DELAY_TIP = "Wait specific time in milliseconds";
Blockly.Msg.ARD_TIME_INF = "wait forever (end program)";
Blockly.Msg.ARD_TIME_INF_TIP = "Wait indefinitely, stopping the program.";
Blockly.Msg.ARD_TIME_MICROS = "current elapsed Time (microseconds)";
Blockly.Msg.ARD_TIME_MICROS_TIP = "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";
Blockly.Msg.ARD_TIME_MILLIS = "current elapsed Time (milliseconds)";
Blockly.Msg.ARD_TIME_MILLIS_TIP = "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer";
Blockly.Msg.ARD_TIME_MS = "milliseconds";
Blockly.Msg.ARD_DS3231_SETUP = 'Setup Real-Time Clock on pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETUP_TIP = 'Setting up RTC Module (DS3231) on pin# A4(SDA) and A5(SCL)';
Blockly.Msg.ARD_DS3231_SETCLOCK = 'Set Clock of RTC (DS3231) manually';
Blockly.Msg.ARD_DS3231_SETDATE = 'with Date: ';
Blockly.Msg.ARD_DS3231_SETTIME = 'and Time: ';
Blockly.Msg.ARD_DS3231_SETCLOCK_TIP = 'ONLY CHECK IT, IF YOU WANT TO MANUALLY SET DATE AND TIME ON RESTART';
Blockly.Msg.ARD_DS3231_READ = 'Read Date and Time from RTC Module';
Blockly.Msg.ARD_DS3231_READYEAR = 'Year: ';
Blockly.Msg.ARD_DS3231_READMONTH = 'Month: ';
Blockly.Msg.ARD_DS3231_READDAY = 'Day: ';
Blockly.Msg.ARD_DS3231_READHOUR = 'Hour: ';
Blockly.Msg.ARD_DS3231_READMINUTE = 'Minute: ';
Blockly.Msg.ARD_DS3231_READSECOND = 'Second: ';
Blockly.Msg.ARD_DS3231_READ_TIP = 'Receives Date and Time as variable for each entity';
Blockly.Msg.ARD_TONEFREQ = "at frequency";
Blockly.Msg.ARD_TONE_FREQ = "frequency";
Blockly.Msg.ARD_TONE_PIN = "Tone PIN#";
Blockly.Msg.ARD_TONE_PIN_TIP = "Generate audio tones on a pin";
Blockly.Msg.ARD_TONE_TIP = "Sets tone on pin to specified frequency within range 31 - 65535";
Blockly.Msg.ARD_TONE_WARNING = "Frequency must be in range 31 - 65535";
Blockly.Msg.ARD_MAP = 'Map %1 fromLow %2 fromHigh %3 toLow %4 toHigh %5';
Blockly.Msg.ARD_MAP_TIP = "Re-maps a number from one range to another.";
Blockly.Msg.ARD_MAX7219_SETUP_DIN = 'Setup MAX7219 on DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CS = ', CS Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_CLK = ' and CLK Pin#';
Blockly.Msg.ARD_MAX7219_SETUP_TIP = 'Setup MAX7219 8x8 LED Matrix module';
Blockly.Msg.ARD_MAX7219_SETCHAR = 'Set Character MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_SETCHAR_TIP = 'Create Character for MAX7219 on DIN Pin';
Blockly.Msg.ARD_MAX7219_CLR = 'Clear Display MAX7219 DIN Pin#';
Blockly.Msg.ARD_MAX7219_CLR_TIP = 'Clears Display of MAX7219 on DIN Pin';
Blockly.Msg.ARD_LCD1602_SETUP = 'Setup LCD 16x2 on digital pins';
Blockly.Msg.ARD_LCD1602_SETUP_PINS = '>>RS:7 >>E:8 >>DB4:';
Blockly.Msg.ARD_LCD1602_SETUP_DB5 = '>>DB5:';
Blockly.Msg.ARD_LCD1602_SETUP_DB6 = '>>DB6:';
Blockly.Msg.ARD_LCD1602_SETUP_DB7 = '>>DB7:';
Blockly.Msg.ARD_LCD1602_SETUP_TIP = 'Setup LCD 16x2 on digital pins\n RS(7), E(8), DB4, DB5, DB6, and DB7';
Blockly.Msg.ARD_LCD1602_WRITE = 'LCD 16x2 >> Write to display ';
Blockly.Msg.ARD_LCD1602_LINE1 = '1st Line: ';
Blockly.Msg.ARD_LCD1602_LINE2 = '2nd Line: ';
Blockly.Msg.ARD_LCD1602_WRITE_TIP = 'Write lines of text to display';
Blockly.Msg.ARD_LCD1602_CLR = 'Clear LCD 16x2 Display';
Blockly.Msg.ARD_LCD1602_CLR_TIP = 'Clears Display of LCD 16x2';
Blockly.Msg.ARD_SEVSEG = 'Setup 7 Segment Display via 74HC595';
Blockly.Msg.ARD_SEVSEG_TIP = 'Sets table of 10 digits for 7 Segment Display that is connected via shiftregister 74HC595';
Blockly.Msg.ARD_SEVSEG_WRITE = '7 Segment Display >> Write Digit ';
Blockly.Msg.ARD_SEVSEG_WRITE_TIP = 'Writes digit 0...9 to 7 Segment Display that is connected via shiftregister 74HC595';
Blockly.Msg.ARD_FOURSEVSEG = 'Setup 4 x 7 Segment Display to pin# ';
Blockly.Msg.ARD_FOURSEVSEG_SEGA = 'A:';
Blockly.Msg.ARD_FOURSEVSEG_SEGB = 'B:';
Blockly.Msg.ARD_FOURSEVSEG_SEGC = 'C:';
Blockly.Msg.ARD_FOURSEVSEG_SEGD = 'D:';
Blockly.Msg.ARD_FOURSEVSEG_SEGE = 'E:';
Blockly.Msg.ARD_FOURSEVSEG_SEGF = 'F:';
Blockly.Msg.ARD_FOURSEVSEG_SEGG = 'G:';
Blockly.Msg.ARD_FOURSEVSEG_SEGDP = 'DP:';
Blockly.Msg.ARD_FOURSEVSEG_DIG1 = 'D1:';
Blockly.Msg.ARD_FOURSEVSEG_DIG2 = 'D2:';
Blockly.Msg.ARD_FOURSEVSEG_DIG3 = 'D3:';
Blockly.Msg.ARD_FOURSEVSEG_DIG4 = 'D4:';
Blockly.Msg.ARD_FOURSEVSEG_TIP = 'Sets table of 10 digits for 4 Digit 7 Segment Display directly via pins to each segment and digit';
Blockly.Msg.ARD_FOURSEVSEG_WRITE = '4 x 7 Segment Display >> Write Digit / Char ';
Blockly.Msg.ARD_FOURSEVSEG_WRITE_TIP = 'Writes digit 0...9 or dot to 4 digit 7 Segment Display';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR = '4 x 7 Segment Display >> Create Char ';
Blockly.Msg.ARD_FOURSEVSEG_SETCHAR_TIP = 'Creates a character for 4 x 7 Segment Display and that can be used via "Write Digit / Char';
Blockly.Msg.ARD_FOURSEVSEG_CLR = '4 x 7 Segment Display >> Clear Display';
Blockly.Msg.ARD_FOURSEVSEG_CLR_TIP = 'Clears and switches off 4 Digit 7 Segment Display';
Blockly.Msg.ARD_SHIFTOUT = 'shiftOut >> Data#';
Blockly.Msg.ARD_SHIFTOUT_C = 'Clk#';
Blockly.Msg.ARD_SHIFTOUT_O = 'Order';
Blockly.Msg.ARD_SHIFTOUT_B = 'byteVal';
Blockly.Msg.ARD_SHIFTOUT_TIP = 'Shifts out a byte of data one bit at a time shiftOut(). Order Left to Right, or Right to Left';
Blockly.Msg.ARD_BITSET_1 = 'Sets variable of';
Blockly.Msg.ARD_BITSET_2 = 'to bit';
Blockly.Msg.ARD_BITSET_TIP = 'bitSet() >> Sets (writes a 1 to) a bit of a numeric value)';
Blockly.Msg.ARD_ATTACHINTERRUPT = 'Attach on Interrupt Pin#';
Blockly.Msg.ARD_ATTACHINTERRUPT_FUNC = 'Function';
Blockly.Msg.ARD_ATTACHINTERRUPT_MODE = 'in Mode';
Blockly.Msg.ARD_ATTACHINTERRUPT_TIP = 'Useful for making things happen automatically in microcontroller programs, e.g. reading a rotary encoder, or monitoring user input';
Blockly.Msg.ARD_TYPE_ARRAY = "Array";
Blockly.Msg.ARD_TYPE_BOOL = "Boolean";
Blockly.Msg.ARD_TYPE_CHAR = "Character";
Blockly.Msg.ARD_TYPE_CHILDBLOCKMISSING = "ChildBlockMissing";
Blockly.Msg.ARD_TYPE_DECIMAL = "Decimal";
Blockly.Msg.ARD_TYPE_DOUBLE = "Double";
Blockly.Msg.ARD_TYPE_LONG = "Large Number";
Blockly.Msg.ARD_TYPE_NULL = "Null";
Blockly.Msg.ARD_TYPE_NUMBER = "Number";
Blockly.Msg.ARD_TYPE_SHORT = "Short Number";
Blockly.Msg.ARD_TYPE_TEXT = "Text";
Blockly.Msg.ARD_TYPE_UNDEF = "Undefined";
Blockly.Msg.ARD_VAR_AS = "as";
Blockly.Msg.ARD_VAR_AS_TIP = "Sets a value to a specific type";
Blockly.Msg.ARD_WRITE_TO = "to";
Blockly.Msg.NEW_INSTANCE = "New instance...";
Blockly.Msg.NEW_INSTANCE_TITLE = "New instance name:";
Blockly.Msg.RENAME_INSTANCE = "Rename instance...";
Blockly.Msg.RENAME_INSTANCE_TITLE = "Rename all '%1' instances to:";
