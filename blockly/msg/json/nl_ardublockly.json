{
	"@metadata": {
		"authors": [
			"Benny Malengier"
		]
	},
	"ARD_TYPE_CHAR": "Character",
	"ARD_TYPE_TEXT": "Text",
	"ARD_TYPE_BOOL": "Boolean",
	"ARD_TYPE_SHORT": "Short Number",
	"ARD_TYPE_NUMBER": "Number",
	"ARD_TYPE_LONG": "Large Number",
	"ARD_TYPE_DECIMAL": "Decimal",
	"ARD_TYPE_DOUBLE": "Double",
	"ARD_TYPE_ARRAY": "Array",
	"ARD_TYPE_NULL": "Null",
	"ARD_TYPE_UNDEF": "Undefined",
	"ARD_TYPE_CHILDBLOCKMISSING": "ChildBlockMissing",
	"ARD_HIGH": "HIGH",
	"ARD_LOW": "LOW",
	"ARD_ANALOGREAD": "Read analog pin#",
	"ARD_ANALOGREAD_TIP": "Return value between 0 and 1024",
	"ARD_ANALOGWRITE": "Set analog pin#",
	"ARD_ANALOGWRITE_TIP": "Write analog value between 0 and 255 to a specific PWM Port",
	"ARD_HIGHLOW_TIP": "Set a pin state logic High or Low.",
	"ARD_DIGITALREAD": "Read digital pin#",
	"ARD_DIGITALREAD_TIP": "Read digital value on a pin: HIGH or LOW",
	"ARD_DIGITALREAD_PULLUP": "Read digital with PULL_UP mode Pin#",
	"ARD_DIGITALWRITE": "Set digitial pin#",
	"ARD_WRITE_TO": "to",
	"ARD_DIGITALWRITE_TIP": "Write digital value HIGH or LOW to a specific Port",
	"ARD_BUILTIN_LED": "Set built-in LED",
	"ARD_BUILTIN_LED_TIP": "Light on or off for the built-in LED of the Arduino",
	"ARD_MKPAD_SETUP": "Setup 4x4 Membrane Keypad (mkpad4x4) with",
	"ARD_MKPAD_ROW1": "row 1 pin#",
	"ARD_MKPAD_ROW2": "row 2 pin#",
	"ARD_MKPAD_ROW3": "row 3 pin#",
	"ARD_MKPAD_ROW4": "row 4 pin#",
	"ARD_MKPAD_COL1": "col 1 pin#",
	"ARD_MKPAD_COL2": "col 2 pin#",
	"ARD_MKPAD_COL3": "col 3 pin#",
	"ARD_MKPAD_COL4": "col 4 pin#",
	"ARD_MKPAD_SETUP_TIP": "Setup 4x4 Membrane Keypad with selected pins for 4x4 Matrix",
	"ARD_MKPAD_GETKEY": "Receive key from mkpad4x4 on row 1 pin#",
	"ARD_MKPAD_GETKEY_TIP": "Receives key pressed on a 4x4 Membrane Keypad",
	"ARD_IRRECV_SETUP": "Setup IR Remote Control with Pin#",
	"ARD_IRRECV_SETUP_TIP": "Setup of Infrared Receiver Module KY-022",
	"ARD_IRRECV_READ": "Read Value from IR Remote Control on Pin#",
	"ARD_IRRECV_READ_AS": " as variable ",
	"ARD_IRRECV_READ_TIP": "Receives Value of KY-022 Infrared Receiver Module as string",
	"ARD_IRRECV_DEFAULT_NAME": "Button#",
	"ARD_RC522_SETUP": "Setup RFID with RST Pin#",
	"ARD_RC522_SETUP_SS": "and SS Pin#",
	"ARD_RC522_SETUP_TIP": "Setup of RFID RC522 Identity Scanner Module",
	"ARD_RC522_GETUID": "RFID RC522 >> Get UID",
	"ARD_RC522_GETUID_TIP": "Reads Identification # of card or dongle with RFID RC522 Identity Scanner Module",
	"ARD_RC522_ADDUID": "RFID RC522 >> Add new UID",
	"ARD_RC522_ADDUID_AS": " as ",
	"ARD_RC522_ADDUID_TIP": "Add UID to as string e.g. A1 B2 C3 D4",
	"ARD_DEFINE": "Define",
	"ARD_TONE_PIN": "Tone PIN#",
	"ARD_TONE_FREQ": "frequency",
	"ARD_TONE_PIN_TIP": "Generate audio tones on a pin",
	"ARD_NOTONE_PIN": "No tone PIN#",
	"ARD_NOTONE_PIN_TIP": "Stop generating a tone on a pin",
	"ARD_MAP": "Map %1 fromLow %2 fromHigh %3 toLow %4 toHigh %5",
	"ARD_MAP_TIP": "Re-maps a number from one range to another.",
	"ARD_FUN_RUN_SETUP": "Arduino run first:",
	"ARD_FUN_RUN_LOOP": "Arduino loop forever:",
	"ARD_FUN_RUN_TIP": "Defines the Arduino setup() and loop() functions.",
	"ARD_PIN_WARN1": "Pin %1 is needed for %2 as pin %3. Already used as %4.",
	"ARD_SERIAL_SETUP": "Setup",
	"ARD_SERIAL_SPEED": ":  speed to",
	"ARD_SERIAL_BPS": "bps",
	"ARD_SERIAL_SETUP_TIP": "Selects the speed for a specific Serial peripheral",
	"ARD_SERIAL_PRINT": "print",
	"ARD_SERIAL_PRINT_NEWLINE": "Add new line",
	"ARD_SERIAL_PRINT_TIP": "Prints data to the console/serial port as human-readable ASCII text.",
	"ARD_SERIAL_PRINT_WARN": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SERVO_WRITE": "Set SERVO from Pin",
	"ARD_SERVO_WRITE_TO": "to",
	"ARD_SERVO_WRITE_DEG_180": "Degrees (0~180)",
	"ARD_SERVO_WRITE_TIP": "Set a Servo to an specified angle",
	"ARD_SERVO_READ": "Read SERVO from PIN#",
	"ARD_SERVO_READ_TIP": "Read a Servo angle",
	"ARD_SR04_SETUP": "Setup HC-SR04 with Echo Pin#",
	"ARD_SR04_SETUP_AND": "and Trigger Pin#",
	"ARD_SR04_SETUP_TIP": "Setup of HC-SR04 Sensor",
	"ARD_SR04_READ": "Read HC-SR04 with Echo PIN#",
	"ARD_SR04_READ_TIP": "Read Distance using HC-SR04 module",
	"ARD_DHT11_SETUP": "Setup DHT11 Sensor with Pin#",
	"ARD_DHT11_SETUP_TIP": "Setup of DHT11 Temperatur and Humidity Sensor",
	"ARD_DHT11_READT": "Read Temperature with DHT11 from PIN#",
	"ARD_DHT11_READT_TIP": "Measures Temperatur using DHT11 Sensor",
	"ARD_DHT11_READH": "Read Humidity with DHT11 from PIN#",
	"ARD_DHT11_READH_TIP": "Measures Humidity using DHT11 Sensor",
	"ARD_GY521_SETUP": "Setup GY-521 Gyroscope with A4(SDA) | A5(SCL) pins",
	"ARD_GY521_SETUP_TIP": "Setup to read Acceleration, Angles and Temperatur with GY-512 Sensor",
	"ARD_GY521_ROT": "GY-521 >> Measure angles on ",
	"ARD_GY521_ROT_TIP": "Measures angles of x, y and z axis in degrees with GY-512 Sensor",
	"ARD_GY521_T": "GY-521 >> Read Temperatur: ",
	"ARD_GY521_T_TIP": "Reads temperatur with GY-512 Sensor",
	"ARD_GY521_X": "X: ",
	"ARD_GY521_Y": "Y: ",
	"ARD_GY521_Z": "and Z: ",
	"ARD_SPI_SETUP": "Setup",
	"ARD_SPI_SETUP_CONF": "configuration:",
	"ARD_SPI_SETUP_SHIFT": "data shift",
	"ARD_SPI_SETUP_MSBFIRST": "MSBFIRST",
	"ARD_SPI_SETUP_LSBFIRST": "LSBFIRST",
	"ARD_SPI_SETUP_DIVIDE": "clock divide",
	"ARD_SPI_SETUP_MODE": "SPI mode (idle - edge)",
	"ARD_SPI_SETUP_MODE0": "0 (Low - Falling)",
	"ARD_SPI_SETUP_MODE1": "1 (Low - Rising)",
	"ARD_SPI_SETUP_MODE2": "2 (High - Falling)",
	"ARD_SPI_SETUP_MODE3": "3 (High - Rising)",
	"ARD_SPI_SETUP_TIP": "Configures the SPI peripheral.",
	"ARD_SPI_TRANS_NONE": "none",
	"ARD_SPI_TRANS_VAL": "transfer",
	"ARD_SPI_TRANS_SLAVE": "to slave pin",
	"ARD_SPI_TRANS_TIP": "Send a SPI message to an specified slave device.",
	"ARD_SPI_TRANS_WARN1": "A setup block for %1 must be added to the workspace to use this block!",
	"ARD_SPI_TRANS_WARN2": "Old pin value %1 is no longer available.",
	"ARD_SPI_TRANSRETURN_TIP": "Send a SPI message to an specified slave device and get data back.",
	"ARD_STEPPER_SETUP": "Setup stepper motor",
	"ARD_STEPPER_MOTOR": "stepper motor:",
	"ARD_STEPPER_DEFAULT_NAME": "MyStepper",
	"ARD_STEPPER_NUMBER_OF_PINS": "Number of pins",
	"ARD_STEPPER_TWO_PINS": "2",
	"ARD_STEPPER_FOUR_PINS": "4",
	"ARD_STEPPER_PIN1": "pin1#",
	"ARD_STEPPER_PIN2": "pin2#",
	"ARD_STEPPER_PIN3": "pin3#",
	"ARD_STEPPER_PIN4": "pin4#",
	"ARD_STEPPER_REVOLVS": "how many steps per revolution",
	"ARD_STEPPER_SPEED": "set speed (rpm) to",
	"ARD_STEPPER_SETUP_TIP": "Configures a stepper motor pinout and other settings.",
	"ARD_STEPPER_STEP": "move stepper",
	"ARD_STEPPER_STEPS": "steps",
	"ARD_STEPPER_STEP_TIP": "Turns the stepper motor a specific number of steps.",
	"ARD_STEPPER_COMPONENT": "stepper",
	"ARD_COMPONENT_WARN1": "A %1 configuration block with the same %2 name must be added to use this block!",
	"ARD_TIME_DELAY": "wait",
	"ARD_TIME_MS": "milliseconds",
	"ARD_TIME_DELAY_TIP": "Wait specific time in milliseconds",
	"ARD_TIME_DELAY_MICROS": "microseconds",
	"ARD_TIME_DELAY_MICRO_TIP": "Wait specific time in microseconds",
	"ARD_TIME_MILLIS": "current elapsed Time (milliseconds)",
	"ARD_TIME_MILLIS_TIP": "Returns the number of milliseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_MICROS": "current elapsed Time (microseconds)",
	"ARD_TIME_MICROS_TIP": "Returns the number of microseconds since the Arduino board began running the current program. Has to be stored in a positive long integer",
	"ARD_TIME_INF": "wait forever (end program)",
	"ARD_TIME_INF_TIP": "Wait indefinitely, stopping the program.",
	"ARD_DS3231_SETUP": "Setup Real-Time Clock on pin# A4(SDA) and A5(SCL)",
	"ARD_DS3231_SETUP_TIP": "Setting up RTC Module (DS3231) on pin# A4(SDA) and A5(SCL)",
	"ARD_DS3231_SETCLOCK": "Set Clock of RTC (DS3231) manually",
	"ARD_DS3231_SETDATE": "with Date: ",
	"ARD_DS3231_SETTIME": "and Time: ",
	"ARD_DS3231_SETCLOCK_TIP": "ONLY CHECK IT, IF YOU WANT TO MANUALLY SET DATE AND TIME ON RESTART",
	"ARD_DS3231_READ": "Read Date and Time from RTC Module",
	"ARD_DS3231_READYEAR": "Year: ",
	"ARD_DS3231_READMONTH": "Month: ",
	"ARD_DS3231_READDAY": "Day: ",
	"ARD_DS3231_READHOUR": "Hour: ",
	"ARD_DS3231_READMINUTE": "Minute: ",
	"ARD_DS3231_READSECOND": "Second: ",
	"ARD_DS3231_READ_TIP": "Receives Date and Time as variable for each entity",
	"ARD_VAR_AS": "as",
	"ARD_VAR_AS_TIP": "Sets a value to a specific type",
	"ARD_PULSE_READ": "measure %1 pulse on pin #%2",
	"ARD_PULSE_READ_TIMEOUT": "measure %1 pulse on pin #%2 (timeout after %3 Î¼s)",
	"ARD_PULSE_TIP": "Measures the duration of a pulse on the selected pin.",
	"ARD_PULSETIMEOUT_TIP": "Measures the duration of a pulse on the selected pin, if it is within the time-out in microseconds.",
	"ARD_SETTONE": "Set tone on pin #",
	"ARD_TONEFREQ": "at frequency",
	"ARD_TONE_TIP": "Sets tone on pin to specified frequency within range 31 - 65535",
	"ARD_TONE_WARNING": "Frequency must be in range 31 - 65535",
	"ARD_NOTONE": "Turn off tone on pin #",
	"ARD_NOTONE_TIP": "Turns the tone off on the selected pin",
	"ARD_MAX7219_SETUP_DIN": "Setup MAX7219 on DIN Pin#",
	"ARD_MAX7219_SETUP_CS": ", CS Pin#",
	"ARD_MAX7219_SETUP_CLK": " and CLK Pin#",
	"ARD_MAX7219_SETUP_TIP": "Setup MAX7219 8x8 LED Matrix module",
	"ARD_MAX7219_SETCHAR": "Set Character MAX7219 DIN Pin#",
	"ARD_MAX7219_SETCHAR_TIP": "Create Character for MAX7219 on DIN Pin",
	"ARD_MAX7219_CLR": "Clear Display MAX7219 DIN Pin#",
	"ARD_MAX7219_CLR_TIP": "Clears Display of MAX7219 on DIN Pin",
	"ARD_LCD1602_SETUP": "Setup LCD 16x2 on digital pins",
	"ARD_LCD1602_SETUP_PINS": ">>RS:7 >>E:8 >>DB4:",
	"ARD_LCD1602_SETUP_DB5": ">>DB5:",
	"ARD_LCD1602_SETUP_DB6": ">>DB6:",
	"ARD_LCD1602_SETUP_DB7": ">>DB7:",
	"ARD_LCD1602_SETUP_TIP": "Setup LCD 16x2 on digital pins\n RS(7), E(8), DB4, DB5, DB6, and DB7",
	"ARD_LCD1602_WRITE": "LCD 16x2 >> Write to display ",
	"ARD_LCD1602_LINE1": "1st Line: ",
	"ARD_LCD1602_LINE2": "2nd Line: ",
	"ARD_LCD1602_WRITE_TIP": "Write lines of text to display",
	"ARD_LCD1602_CLR": "Clear LCD 16x2 Display",
	"ARD_LCD1602_CLR_TIP": "Clears Display of LCD 16x2",
	"ARD_SEVSEG": "Setup 7 Segment Display via 74HC595",
	"ARD_SEVSEG_TIP": "Sets table of 10 digits for 7 Segment Display that is connected via shiftregister 74HC595",
	"ARD_SEVSEG_WRITE": "7 Segment Display >> Write Digit ",
	"ARD_SEVSEG_WRITE_TIP": "Writes digit 0...9 to 7 Segment Display that is connected via shiftregister 74HC595",
	"ARD_FOURSEVSEG": "Setup 4 x 7 Segment Display to pin# ",
	"ARD_FOURSEVSEG_SEGA": "A:",
	"ARD_FOURSEVSEG_SEGB": "B:",
	"ARD_FOURSEVSEG_SEGC": "C:",
	"ARD_FOURSEVSEG_SEGD": "D:",
	"ARD_FOURSEVSEG_SEGE": "E:",
	"ARD_FOURSEVSEG_SEGF": "F:",
	"ARD_FOURSEVSEG_SEGG": "G:",
	"ARD_FOURSEVSEG_SEGDP": "DP:",
	"ARD_FOURSEVSEG_DIG1": "D1:",
	"ARD_FOURSEVSEG_DIG2": "D2:",
	"ARD_FOURSEVSEG_DIG3": "D3:",
	"ARD_FOURSEVSEG_DIG4": "D4:",
	"ARD_FOURSEVSEG_TIP": "Sets table of 10 digits for 4 Digit 7 Segment Display directly via pins to each segment and digit",
	"ARD_FOURSEVSEG_WRITE": "4 x 7 Segment Display >> Write Digit / Char ",
	"ARD_FOURSEVSEG_WRITE_TIP": "Writes digit 0...9 or dot to 4 digit 7 Segment Display",
	"ARD_FOURSEVSEG_SETCHAR": "4 x 7 Segment Display >> Create Char ",
	"ARD_FOURSEVSEG_SETCHAR_TIP": "Creates a character for 4 x 7 Segment Display and that can be used via "Write Digit / Char",
	"ARD_FOURSEVSEG_CLR": "4 x 7 Segment Display >> Clear Display",
	"ARD_FOURSEVSEG_CLR_TIP": "Clears and switches off 4 Digit 7 Segment Display",
	"ARD_SHIFTOUT": "shiftOut >> Data#",
	"ARD_SHIFTOUT_C": "Clk#",
	"ARD_SHIFTOUT_O": "Order",
	"ARD_SHIFTOUT_B": "byteVal",
	"ARD_ARD_SHIFTOUT_TIP": "Shifts out a byte of data one bit at a time shiftOut(). Order Left to Right, or Right to Left",
	"ARD_BITSET_1": "Sets variable of",
	"ARD_BITSET_2": "to bit",
	"ARD_BITSET_TIP": "bitSet() >> Sets (writes a 1 to) a bit of a numeric value",

	"ARD_ATTACHINTERRUPT": "Attach on Interrupt Pin#",
	"ARD_ATTACHINTERRUPT_FUNC": "Function",
	"ARD_ATTACHINTERRUPT_MODE": "in Mode",
	"ARD_ATTACHINTERRUPT_TIP": "Useful for making things happen automatically in microcontroller programs, e.g. reading a rotary encoder, or monitoring user input",
	"NEW_INSTANCE": "New instance...",
	"RENAME_INSTANCE": "Rename instance...",
	"NEW_INSTANCE_TITLE": "New instance name:",
	"RENAME_INSTANCE_TITLE": "Rename all '%1' instances to:"
}
